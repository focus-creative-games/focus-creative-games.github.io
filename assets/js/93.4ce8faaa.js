(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{413:function(e,t,s){"use strict";s.r(t);var a=s(7),i=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"project-settings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-settings"}},[e._v("#")]),e._v(" Project Settings")]),e._v(" "),t("p",[e._v("After installing the hybridclr_unity package, you need to split the project into AOT/hot update assembly, and set the relevant configuration parameters correctly.")]),e._v(" "),t("h2",{attrs:{id:"configure-playersettings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-playersettings"}},[e._v("#")]),e._v(" Configure PlayerSettings")]),e._v(" "),t("ul",[t("li",[e._v("Turn off the incremental GC (Use Incremental GC) option. Because incremental GC is not currently supported")]),e._v(" "),t("li",[t("code",[e._v("Scripting Backend")]),e._v(" switched to "),t("code",[e._v("il2cpp")])]),e._v(" "),t("li",[e._v("Switch "),t("code",[e._v("Api Compatibility Level")]),e._v(" to "),t("code",[e._v(".Net 4 or .Net Framework")]),e._v(" (.Net standard can be used when building the main package, but you must switch to "),t("code",[e._v(".Net 4.x or .Net Framework")]),e._v(" when using script Compile to hot update dll )")])]),e._v(" "),t("h2",{attrs:{id:"hot-update-module-split"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hot-update-module-split"}},[e._v("#")]),e._v(" Hot Update Module Split")]),e._v(" "),t("p",[e._v("Obviously, the project must be split into AOT (that is, compiled into the main game package) and hot update assembly before hot update can be performed. HybridCLR for\nThere are no restrictions on how to split the assembly, even you can put the AOT or hot update assembly into a third-party project.")]),e._v(" "),t("p",[e._v("There are several common split methods:")]),e._v(" "),t("ul",[t("li",[e._v("Assembly-CSharp as AOT assembly. The remaining code splits itself into 0-N assemblies.")]),e._v(" "),t("li",[e._v("Assembly-CSharp as a hot update assembly. The rest of the code itself is split into 1-N assemblies (in practice, there must be at least one AOT startup assembly responsible for hot updates).")])]),e._v(" "),t("p",[e._v("The first one needs to set up hot update references to AOT assemblies by yourself, and due to Unity's own reasons, Assembly-CSharp is the top-level assembly, and it will automatically reference all remaining assemblies.\nIn practice, it is easy for the hot update assembly code to be accidentally referenced by Assembly-CSharp, resulting in packaging errors. Therefore, it is recommended that novices use Assembly-CSharp as a hot update assembly.")]),e._v(" "),t("p",[e._v("Regardless of the splitting method, just set the reference relationship between the assemblies correctly.")]),e._v(" "),t("h2",{attrs:{id:"configure-hybridclr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-hybridclr"}},[e._v("#")]),e._v(" Configure HybridCLR")]),e._v(" "),t("p",[e._v("Detailed configuration related documents can be found in "),t("RouterLink",{attrs:{to:"/en/hybridclr/hybridclr_unity/"}},[e._v("hybridclr_unity package introduction")]),e._v(".")],1),e._v(" "),t("p",[e._v("Click the menu "),t("code",[e._v("HybridCLR/Settings")]),e._v(" to open the configuration interface. Novices only need to care about "),t("code",[e._v("hotUpdate Assembly Definitions")]),e._v(" and "),t("code",[e._v("hotUpdate dlls")]),e._v(" fields.")]),e._v(" "),t("p",[e._v("For the hot update assembly in the project, if it is an assembly defined by assembly definition (asmdef), add\n"),t("code",[e._v("hotUpdateAssemblyDefinitions")]),e._v(" list, if it is a normal dll, just add the assembly name (excluding the '.dll' suffix, such as Main, Assembly-CSharp) to "),t("code",[e._v("hotUpdateAssemblies")]),e._v(". These two lists are equivalent, do not add repeatedly, otherwise an error will be reported.")]),e._v(" "),t("p",[e._v("If your hot update code is in an external project, such as using a framework such as ET, its hot update code is not placed in the Unity project, you can add it in "),t("code",[e._v("externalHotUpdateAssemblyDirs")]),e._v("\nThe search path of the external hot update dll is specified in the configuration item. Note that this path is a relative path, relative to the Unity project root directory.")]),e._v(" "),t("p",[t("strong",[e._v("So far, all the settings related to hot update are completed.")])])])}),[],!1,null,null,null);t.default=i.exports}}]);