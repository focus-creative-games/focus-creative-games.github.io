(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{445:function(e,t,a){"use strict";a.r(t);var n=a(7),o=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"faq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[e._v("#")]),e._v(" FAQ")]),e._v(" "),t("h2",{attrs:{id:"i-run-the-build-script-in-the-sample-project-under-the-projects-directory-of-the-luban-examples-project-why-does-it-prompt-me-to-connect-fail-and-fail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i-run-the-build-script-in-the-sample-project-under-the-projects-directory-of-the-luban-examples-project-why-does-it-prompt-me-to-connect-fail-and-fail"}},[e._v("#")]),e._v(" I run the build script in the sample project under the Projects directory of the luban_examples project, why does it prompt me to connect fail and fail?")]),e._v(" "),t("p",[e._v("The generation script of the sample project uses luban.client, which uses cloud generation by default, and it needs to connect to the remote luban.server to complete the generation. There are two ways to solve")]),e._v(" "),t("ul",[t("li",[e._v("Run run_luban_server.bat or run_luban_server.sh in the luban_examples project directory. and then run the build script")]),e._v(" "),t("li",[e._v("Replace Luban.Client/Luban.Client in the script with Luban.ClientServer/Luban.ClientServer. Because Luban.ClientServer contains both Client and Server\n, can be generated independently.")])]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("@@Replace\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GEN_CLIENT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("%WORKSPACE%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.exe\n@@with\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GEN_CLIENT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("%WORKSPACE%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.ClientServer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.ClientServer.exe\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("For details, see "),t("RouterLink",{attrs:{to:"/en/luban/command_tools/"}},[e._v("luban command line tools")])],1),e._v(" "),t("h2",{attrs:{id:"how-to-specify-the-primary-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-specify-the-primary-key"}},[e._v("#")]),e._v(" How to specify the primary key")]),e._v(" "),t("p",[e._v("The index field of the table specifies the list of primary keys. For details, please refer to the relevant documents about the mode and index of the table in "),t("RouterLink",{attrs:{to:"/en/luban/define/"}},[e._v("Configuration Related Definitions")]),e._v(".")],1),e._v(" "),t("p",[e._v("The map and list tables support the concept of primary key. If the mode and index are not specified, the mode=map mode is automatically set, and the first field of the bean is recorded as the primary key.")]),e._v(" "),t("p",[e._v("Assuming that the records in the TbTest table are of type Test, and you want to use the my_index field of Test as the key, then:")]),e._v(" "),t("ul",[t("li",[e._v("If the table is defined in xml, specify the primary key field name in the index attribute of the table, as follows:")])]),e._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("table")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("TbTest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("value")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("index")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("my_index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("If the table is defined in table.xlsx, specify the primary key name in the index column, as follows")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("##var")]),e._v(" "),t("th",[e._v("full_name")]),e._v(" "),t("th",[e._v("value_type")]),e._v(" "),t("th",[e._v("define_from_excel")]),e._v(" "),t("th",[e._v("input")]),e._v(" "),t("th",[e._v("index")]),e._v(" "),t("th",[e._v("...")])])]),e._v(" "),t("tbody",[t("tr",[t("td"),e._v(" "),t("td",[e._v("TbTest")]),e._v(" "),t("td",[e._v("Test")]),e._v(" "),t("td",[e._v("true")]),e._v(" "),t("td",[e._v("equip.xlsx")]),e._v(" "),t("td",[e._v("my_index")]),e._v(" "),t("td")])])]),e._v(" "),t("h2",{attrs:{id:"does-it-support-multiple-primary-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#does-it-support-multiple-primary-keys"}},[e._v("#")]),e._v(" Does it support multiple primary keys?")]),e._v(" "),t("p",[e._v("support. When table mode=list, joint multi-primary key mode and independent multi-primary key mode are supported. For detailed documents, please refer to the related documents about the table mode in [Configuration Related Definitions](/luban/define/#table's mode detailed introduction).")]),e._v(" "),t("h2",{attrs:{id:"support-exporting-different-tables-and-different-fields-by-client-and-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#support-exporting-different-tables-and-different-fields-by-client-and-server"}},[e._v("#")]),e._v(" Support exporting different tables and different fields by client and server?")]),e._v(" "),t("p",[e._v("Support. [Configuration-related definitions](/luban/define/#group export-group)\nRelated documents about classification definition and group export.")]),e._v(" "),t("h2",{attrs:{id:"which-source-data-file-types-are-supported"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#which-source-data-file-types-are-supported"}},[e._v("#")]),e._v(" Which source data file types are supported")]),e._v(" "),t("ul",[t("li",[e._v("excel family. csv, xls, xlm, xlsx, xlsm, etc. csv supports various encodings, and luban will intelligently guess its encoding, whether you use gbk, utf-8 or other encodings, it can be processed correctly.")]),e._v(" "),t("li",[e._v("json")]),e._v(" "),t("li",[e._v("xml")]),e._v(" "),t("li",[e._v("lua")]),e._v(" "),t("li",[e._v("yaml")])]),e._v(" "),t("h2",{attrs:{id:"can-the-data-of-the-configuration-table-come-from-multiple-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-the-data-of-the-configuration-table-come-from-multiple-files"}},[e._v("#")]),e._v(" Can the data of the configuration table come from multiple files?")]),e._v(" "),t("p",[e._v("Yes. See source details "),t("RouterLink",{attrs:{to:"/en/luban/define/#table-input-data"}},[e._v("configuration related definitions")]),e._v(" documentation on table.input in .")],1),e._v(" "),t("h2",{attrs:{id:"can-multiple-tables-be-placed-in-the-same-excel-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-multiple-tables-be-placed-in-the-same-excel-file"}},[e._v("#")]),e._v(" Can multiple tables be placed in the same excel file?")]),e._v(" "),t("p",[e._v("Yes. See source details "),t("RouterLink",{attrs:{to:"/en/luban/define/#table-input-data"}},[e._v("configuration related definitions")]),e._v(" documentation on table.input in .")],1),e._v(" "),t("h2",{attrs:{id:"when-the-data-file-is-an-xlsx-file-will-luban-read-the-first-sheet-or-all-sheets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#when-the-data-file-is-an-xlsx-file-will-luban-read-the-first-sheet-or-all-sheets"}},[e._v("#")]),e._v(" When the data file is an xlsx file, will luban read the first sheet or all sheets?")]),e._v(" "),t("p",[e._v("Read all sheets, but ignore those sheets whose A1 cell content does not start with ##.")]),e._v(" "),t("h2",{attrs:{id:"planning-wants-to-have-a-non-data-sheet-in-xlsx-how-to-do-it"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#planning-wants-to-have-a-non-data-sheet-in-xlsx-how-to-do-it"}},[e._v("#")]),e._v(" Planning wants to have a non-data sheet in xlsx, how to do it")]),e._v(" "),t("p",[e._v("As long as the A1 cell of the sheet does not start with ##.")]),e._v(" "),t("h2",{attrs:{id:"want-to-comment-out-a-column-how-to-do-it"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#want-to-comment-out-a-column-how-to-do-it"}},[e._v("#")]),e._v(" want to comment out a column, how to do it")]),e._v(" "),t("p",[e._v("Leave the column name empty, or something like #xxxx, __xxxx.")]),e._v(" "),t("h2",{attrs:{id:"want-to-comment-out-a-certain-line-of-records-how-to-do-it"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#want-to-comment-out-a-certain-line-of-records-how-to-do-it"}},[e._v("#")]),e._v(" Want to comment out a certain line of records, how to do it")]),e._v(" "),t("p",[e._v("Just fill the first cell of the line with ##.")]),e._v(" "),t("h2",{attrs:{id:"some-configurations-are-only-used-for-internal-testing-during-the-development-period-and-are-not-exported-when-they-are-officially-released-how-to-do-this"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#some-configurations-are-only-used-for-internal-testing-during-the-development-period-and-are-not-exported-when-they-are-officially-released-how-to-do-this"}},[e._v("#")]),e._v(" Some configurations are only used for internal testing during the development period, and are not exported when they are officially released. How to do this?")]),e._v(" "),t("p",[e._v("Luban supports the concept of data tags. The first column of excel is tag.")]),e._v(" "),t("ul",[t("li",[e._v("Ignore this line when tag is ##")]),e._v(" "),t("li",[e._v("When the tag is xxx, if --export_exclude_tags xxx is used in the Luban.Client command line, the record will not be exported")])]),e._v(" "),t("h2",{attrs:{id:"i-want-to-save-a-record-for-each-json-but-there-are-too-many-files-it-is-very-troublesome-to-specify-in-the-input-how-to-solve-it"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i-want-to-save-a-record-for-each-json-but-there-are-too-many-files-it-is-very-troublesome-to-specify-in-the-input-how-to-solve-it"}},[e._v("#")]),e._v(" I want to save a record for each json, but there are too many files, it is very troublesome to specify in the input, how to solve it?")]),e._v(" "),t("p",[e._v("Use a catalog data source. Put all json files in a directory (it can be a directory tree), and set input to this directory. luban will automatically traverse the entire directory tree, treating each file as\nA record is read in. For details, see "),t("RouterLink",{attrs:{to:"/en/luban/data_source/##Data-source-file"}},[e._v("Other data sources-json")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"can-a-json-file-contain-multiple-records"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-a-json-file-contain-multiple-records"}},[e._v("#")]),e._v(" Can a json file contain multiple records?")]),e._v(" "),t("p",[e._v("Can. But it must be specified in the form of *@xxx.json in the data source. For details, see "),t("RouterLink",{attrs:{to:"/en/luban/data_source/##Data-source-file"}},[e._v("Other data sources-json")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"can-a-record-come-from-some-deep-field-in-a-json-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-a-record-come-from-some-deep-field-in-a-json-file"}},[e._v("#")]),e._v(" Can a record come from some deep field in a json file?")]),e._v(" "),t("p",[e._v("Can. There are two situations:")]),e._v(" "),t("ul",[t("li",[e._v("To read a record from a field, specify it in the form of a.b.c@xx.json")]),e._v(" "),t("li",[e._v("read the list of records from the field, specify in the form of *a.b.c@xx.json")])]),e._v(" "),t("p",[e._v("For details, see [Other data sources-json](/luban/data_source/#Data source file)")]),e._v(" "),t("h2",{attrs:{id:"can-i-put-the-data-of-multiple-tables-into-one-json-file-like-xlsx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-i-put-the-data-of-multiple-tables-into-one-json-file-like-xlsx"}},[e._v("#")]),e._v(" Can I put the data of multiple tables into one json file like xlsx?")]),e._v(" "),t("p",[e._v("Can. Similar to the excel data source, as long as each table is specified in the form of field@xx.json or *field@xx.json.\nFor details, see [Other data sources-json](/luban/data_source/#Data source file)")]),e._v(" "),t("h2",{attrs:{id:"does-it-support-asynchronous-loading-of-configuration-tables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#does-it-support-asynchronous-loading-of-configuration-tables"}},[e._v("#")]),e._v(" Does it support asynchronous loading of configuration tables?")]),e._v(" "),t("p",[e._v("Not directly supported. But you can achieve asynchronous loading by custom template.")]),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/en/luban/advanced/template/"}},[e._v("code and data template")]),e._v(", and the corresponding asynchronous loading example project "),t("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_CustomTemplate_AsyncLoad",target:"_blank",rel:"noopener noreferrer"}},[e._v("csharp_async_load"),t("OutboundLink")],1)],1),e._v(" "),t("h2",{attrs:{id:"does-it-support-custom-code-or-data-generation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#does-it-support-custom-code-or-data-generation"}},[e._v("#")]),e._v(" Does it support custom code or data generation?")]),e._v(" "),t("p",[e._v("Support. See "),t("RouterLink",{attrs:{to:"/en/luban/advanced/template/"}},[e._v("data and code template")])],1),e._v(" "),t("h2",{attrs:{id:"how-to-export-the-definition-and-data-of-protobuf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-export-the-definition-and-data-of-protobuf"}},[e._v("#")]),e._v(" How to export the definition and data of protobuf")]),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/en/luban/generate_code_data/"}},[e._v("Code and Data Generation")])],1),e._v(" "),t("h2",{attrs:{id:"how-to-export-msgpack-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-export-msgpack-data"}},[e._v("#")]),e._v(" How to export msgpack data")]),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/en/luban/generate_code_data/"}},[e._v("Code and Data Generation")])],1),e._v(" "),t("h2",{attrs:{id:"how-to-export-the-definition-and-data-of-flatbuffers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-export-the-definition-and-data-of-flatbuffers"}},[e._v("#")]),e._v(" How to export the definition and data of flatbuffers")]),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/en/luban/generate_code_data/"}},[e._v("Code and Data Generation")])],1),e._v(" "),t("h2",{attrs:{id:"after-generation-the-local-directory-will-generate-a-cache-meta-what-is-the-purpose-of-this-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#after-generation-the-local-directory-will-generate-a-cache-meta-what-is-the-purpose-of-this-file"}},[e._v("#")]),e._v(" After generation, the local directory will generate a .cache.meta, what is the purpose of this file?")]),e._v(" "),t("p",[e._v(".cache.meta contains information (path, md5 code, length, modification timestamp) of all files involved in the interaction with Luban.Server. Used to optimize build performance.")]),e._v(" "),t("p",[e._v("Since the working model of Luban.Client and Luban.Server is a cloud generation model, after Luban.Client initiates a generation request to the server, the server does not directly read the configuration file required for generation, but first obtains\nThe meta information (path, md5) of these files, if there is a file with the same md5 in the memory cache, it will be read directly, and the file data will not be read from the client, which greatly improves the performance of incremental generation.")]),e._v(" "),t("p",[e._v("After the server is generated, it will also send the generated file metadata list to the client, including (path, md5) these metadata information. If these files do not exist locally, download the download, if they already exist, check\nWhether there is any change, at this time Luban.Client will not directly read the local file and calculate md5, but first check whether there is corresponding file md5 information in .cache.meta, if the length of the local file and the modification timestamp\nIf it is the same as that in .cache.meta, it is considered that .cache.meta contains the correct md5 value, and then compare this value with the md5 of the result generated by the server. Only if it is different, will it be re-downloaded.")]),e._v(" "),t("h2",{attrs:{id:"can-i-reference-existing-enums-and-structs-for-example-you-want-to-use-unityengine-audiotype-and-unityengine-color-in-the-generated-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-i-reference-existing-enums-and-structs-for-example-you-want-to-use-unityengine-audiotype-and-unityengine-color-in-the-generated-code"}},[e._v("#")]),e._v(" Can I reference existing enums and structs? For example, you want to use UnityEngine.AudioType and UnityEngine.Color in the generated code")]),e._v(" "),t("p",[e._v("Yes, enumerations and structures of external types are supported, but currently only the C# language is supported. For detailed documentation, see the external type related documentation in "),t("RouterLink",{attrs:{to:"/en/luban/define/"}},[e._v("Configuration Definition Introduction")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=o.exports}}]);