(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{333:function(r,t,e){"use strict";e.r(t);var i=e(7),a=Object(i.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"hybridclr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr"}},[r._v("#")]),r._v(" HybridCLR")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"http://img.shields.io/badge/license-MIT-blue.svg",alt:"license"}}),t("OutboundLink")],1)]),r._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/focus-creative-games/hybridclr/raw/main/docs/images/logo.jpg",alt:"logo"}})]),r._v(" "),t("br"),r._v(" "),t("br"),r._v(" "),t("p",[r._v("HybridCLR(代号wolong)是一个"),t("strong",[r._v("特性完整、零成本、高性能、低内存")]),r._v("的"),t("strong",[r._v("近乎完美")]),r._v("的Unity全平台原生c#热更方案。")]),r._v(" "),t("p",[r._v("HybridCLR扩充了il2cpp的代码，使它由纯"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Ahead-of-time_compilation",target:"_blank",rel:"noopener noreferrer"}},[r._v("AOT"),t("OutboundLink")],1),r._v(" runtime变成‘AOT+Interpreter’ 混合runtime，进而原生支持动态加载assembly，使得基于il2cpp backend打包的游戏不仅能在Android平台，也能在IOS、Consoles等限制了JIT的平台上高效地以"),t("strong",[r._v("AOT+interpreter")]),r._v("混合模式执行。从底层彻底支持了热更新。")]),r._v(" "),t("p",[r._v("HybridCLR开创性地实现了 "),t("code",[r._v("Differential Hybrid Execution(DHE)")]),r._v(" 差分混合执行技术。即可以对AOT dll任意增删改，会智能地让变化或者新增的类和函数以interpreter模式运行，但未改动的类和函数以AOT方式运行，让热更新的游戏逻辑的运行性能基本达到原生AOT的水平。")]),r._v(" "),t("h2",{attrs:{id:"文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[r._v("#")]),r._v(" 文档")]),r._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/hybridclr/about/"}},[r._v("官方文档")])],1),r._v(" "),t("li",[t("RouterLink",{attrs:{to:"/hybridclr/start_up/"}},[r._v("快速上手")])],1),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr_trial",target:"_blank",rel:"noopener noreferrer"}},[r._v("示例项目"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.zhihu.com/column/c_1489549396035870720",target:"_blank",rel:"noopener noreferrer"}},[r._v("知乎专栏"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://edu.uwa4d.com/course-intro/0/432",target:"_blank",rel:"noopener noreferrer"}},[r._v("UWA学堂"),t("OutboundLink")],1)])]),r._v(" "),t("h2",{attrs:{id:"特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[r._v("#")]),r._v(" 特性")]),r._v(" "),t("ul",[t("li",[r._v("特性完整。 近乎完整实现了"),t("a",{attrs:{href:"https://www.ecma-international.org/publications-and-standards/standards/ecma-335/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ECMA-335规范"),t("OutboundLink")],1),r._v('，除了 下文中"限制和注意事项" 之外的特性都支持。')]),r._v(" "),t("li",[r._v("零学习和使用成本。 HybridCLR将纯AOT runtime增强为完整的runtime，使得热更新代码与AOT代码无缝工作。脚本类与AOT类在同一个运行时内，可以随意写继承、反射、多线程(volatile、ThreadStatic、Task、async)之类的代码。不需要额外写任何特殊代码、没有代码生成，也没有什么特殊限制。")]),r._v(" "),t("li",[r._v("执行高效。实现了一个极其高效的寄存器解释器，所有指标都大幅优于其他热更新方案。"),t("a",{attrs:{href:"/hybridclr/performance"}},[r._v("性能测试报告")])]),r._v(" "),t("li",[r._v("内存高效。 热更新脚本中定义的类跟普通c#类占用一样的内存空间，远优于其他热更新方案。"),t("a",{attrs:{href:"/hybridclr/memory"}},[r._v("内存占用报告")])]),r._v(" "),t("li",[t("code",[r._v("Differential Hybrid Execution(DHE)")]),r._v(" 差分混合执行技术")])]),r._v(" "),t("h2",{attrs:{id:"工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[r._v("#")]),r._v(" 工作原理")]),r._v(" "),t("p",[r._v("HybridCLR从mono的"),t("a",{attrs:{href:"https://www.mono-project.com/news/2017/11/13/mono-interpreter/",target:"_blank",rel:"noopener noreferrer"}},[r._v("mixed mode execution"),t("OutboundLink")],1),r._v('技术中得到启发，为unity的il2cpp之类的AOT runtime额外提供了interpreter模块，将它们由纯AOT运行时改造为"AOT + Interpreter"混合运行方式。')]),r._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/focus-creative-games/hybridclr/raw/main/docs/images/architecture.png",alt:"icon"}})]),r._v(" "),t("p",[r._v("更具体地说，HybridCLR做了以下几点工作：")]),r._v(" "),t("ul",[t("li",[r._v("实现了一个高效的元数据(dll)解析库")]),r._v(" "),t("li",[r._v("改造了元数据管理模块，实现了元数据的动态注册")]),r._v(" "),t("li",[r._v("实现了一个IL指令集到自定义的寄存器指令集的compiler")]),r._v(" "),t("li",[r._v("实现了一个高效的寄存器解释器")]),r._v(" "),t("li",[r._v("额外提供大量的instinct函数，提升解释器性能")])]),r._v(" "),t("h2",{attrs:{id:"与其他流行的c-热更新方案的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与其他流行的c-热更新方案的区别"}},[r._v("#")]),r._v(" 与其他流行的c#热更新方案的区别")]),r._v(" "),t("p",[r._v("HybridCLR是原生的c#热更新方案。通俗地说，il2cpp相当于mono的aot模块，HybridCLR相当于mono的interpreter模块，两者合一成为完整mono。HybridCLR使得il2cpp变成一个全功能的runtime，原生（即通过System.Reflection.Assembly.Load）支持动态加载dll，从而支持ios平台的热更新。")]),r._v(" "),t("p",[r._v("正因为HybridCLR是原生runtime级别实现，热更新部分的类型与主工程AOT部分类型是完全等价并且无缝统一的。可以随意调用、继承、反射、多线程，不需要生成代码或者写适配器。")]),r._v(" "),t("p",[r._v("其他热更新方案则是独立vm，与il2cpp的关系本质上相当于mono中嵌入lua的关系。因此类型系统不统一，为了让热更新类型能够继承AOT部分类型，需要写适配器，并且解释器中的类型不能为主工程的类型系统所识别。特性不完整、开发麻烦、运行效率低下。")]),r._v(" "),t("h2",{attrs:{id:"兼容性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[r._v("#")]),r._v(" 兼容性")]),r._v(" "),t("ul",[t("li",[r._v("支持所有il2cpp支持的平台。目前测试支持 PC(Win32和Win64)、macOS(x86、x64、Arm64)、Android(armv7、armv8)、iOS(64bit)、WebGL平台，"),t("strong",[r._v("微信小程序平台")]),r._v("，剩余平台有待测试。")]),r._v(" "),t("li",[r._v("已经支持Unity 2019、2020、2021全系列LTS版本")]),r._v(" "),t("li",[r._v("测试过大量游戏常见库，未发现跟il2cpp原生兼容但使用HybridCLR后不兼容性的库。只要能在il2cpp backend下工作的库都可以在HybridCLR下正常工作。甚至那些与il2cpp因为AOT问题不兼容的库，现在因为HybridCLR对il2cpp的能力扩充，反而可以正常运行了。")])]),r._v(" "),t("h2",{attrs:{id:"稳定性状况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#稳定性状况"}},[r._v("#")]),r._v(" 稳定性状况")]),r._v(" "),t("p",[r._v("当前已经发布了"),t("strong",[r._v("极其稳定")]),r._v("的1.x及2.x正式版本，足以满足大中型商业项目的稳定性要求。自2022.6.7上线第一个游戏起，线上项目中只发生过一起小bug，并且迅速地在几个小时内被修复。")]),r._v(" "),t("p",[r._v("目前至少有上千个商业游戏项目完成接入，其中有几百款已经双端上线，上线的项目中包括MMORPG、重度卡牌、重度塔防之类的游戏。")]),r._v(" "),t("p",[r._v("大多数头部公司如腾讯、网易、funplus、完美、叠纸、字节都已经接入多个项目并且很快要（或者已经）上线。")]),r._v(" "),t("h2",{attrs:{id:"支持与联系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持与联系"}},[r._v("#")]),r._v(" 支持与联系")]),r._v(" "),t("ul",[t("li",[r._v("官方1群：651188171（满）。加群获得官方最新动态。")]),r._v(" "),t("li",[r._v("新手1群：428404198（满）。新手使用过程中遇到问题，都可以在群里咨询。")]),r._v(" "),t("li",[r._v("新手2群："),t("strong",[r._v("680274677（推荐）")]),r._v("。建议加群获得官方最新动态。")]),r._v(" "),t("li",[r._v("悬赏互助群：762953653。悬赏提问，快速解决问题。")]),r._v(" "),t("li",[r._v("官方邮箱：hybridclr@code-philosophy.com")]),r._v(" "),t("li",[r._v("商业合作邮箱: business@code-philosophy.com")])]),r._v(" "),t("h2",{attrs:{id:"后续开发规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后续开发规划"}},[r._v("#")]),r._v(" 后续开发规划")]),r._v(" "),t("ul",[t("li",[r._v("解释器指令优化")]),r._v(" "),t("li",[r._v("支持增量式GC")]),r._v(" "),t("li",[r._v("支持extern函数")]),r._v(" "),t("li",[r._v("其他优化")])]),r._v(" "),t("h2",{attrs:{id:"关于作者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于作者"}},[r._v("#")]),r._v(" 关于作者")]),r._v(" "),t("p",[t("strong",[r._v("walon")]),r._v(" ："),t("strong",[r._v("focus-creative-games")]),r._v(" 创始人")]),r._v(" "),t("p",[r._v("毕业于清华大学物理系，2006年CMO金牌，奥数国家集训队成员，保送清华基科班。专注于游戏技术，擅长开发架构和基础技术设施。")]),r._v(" "),t("h2",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[r._v("#")]),r._v(" license")]),r._v(" "),t("p",[r._v("HybridCLR is licensed under the "),t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[r._v("MIT"),t("OutboundLink")],1),r._v(" license")])])}),[],!1,null,null,null);t.default=a.exports}}]);