(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{361:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"hybridclr-unity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr-unity"}},[t._v("#")]),t._v(" hybridclr_unity")]),t._v(" "),s("p",[t._v("hybridclr_unity是一个Unity package，它提供了HybridCLR所需的Editor工作流工具脚本及Runtime脚本。借助\nhybridclr_unity提供的工作流工具，打包一个支持HybridCLR热更新功能的App变得非常简单。")]),t._v(" "),s("p",[t._v("hybridclr_unity工具主要包含：")]),t._v(" "),s("ul",[s("li",[t._v("Editor相关脚本")]),t._v(" "),s("li",[t._v("Runtime相关脚本")]),t._v(" "),s("li",[t._v("iOSBuild脚本")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("从git url安装 "),s("code",[t._v("com.focus-creative-games.hybridclr_unity")]),t._v(" "),s("a",{attrs:{href:"https://gitee.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitee(推荐)"),s("OutboundLink")],1),t._v("或"),s("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),s("OutboundLink")],1),t._v(" package。")]),t._v(" "),s("p",[t._v("不熟悉从url安装package的请看"),s("a",{attrs:{href:"https://docs.unity3d.com/Manual/upm-ui-giturl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("install from giturl"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("由于国内网络原因，在unity中可能遇到网络异常而无法安装。你可以先把 "),s("code",[t._v("com.focus-creative-games.hybridclr_unity")]),t._v(" clone或者下载到本地，然后再 "),s("a",{attrs:{href:"https://docs.unity3d.com/Manual/upm-ui-local.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("install from disk"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("或者更简单一点的做法，下载到本地后，将仓库文件夹目录改名为"),s("code",[t._v("com.focus-creative-games.hybridclr_unity")]),t._v("，直接复制到你们项目的"),s("code",[t._v("Packages")]),t._v("目录下即可。")]),t._v(" "),s("h2",{attrs:{id:"hybridclr菜单介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr菜单介绍"}},[t._v("#")]),t._v(" HybridCLR菜单介绍")]),t._v(" "),s("h3",{attrs:{id:"installer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installer"}},[t._v("#")]),t._v(" Installer...")]),t._v(" "),s("p",[t._v("提供一个方便的安装器，帮助正确设置本地il2cpp目录，其中包含替换"),s("code",[t._v("HybridCLRData/LocalIl2CppData-{platform}/il2cpp/libil2cpp")]),t._v("目录为HybridCLR修改版本。")]),t._v(" "),s("p",[t._v("安装器需要从匹配版本的Unity安装目录复制il2cpp(类似"),s("code",[t._v("C:\\Program Files\\Unity\\Hub\\Editor\\2020.3.33f1\\Editor\\Data\\il2cpp")]),t._v(")相关文件。")]),t._v(" "),s("ul",[s("li",[t._v("对于2019.4.40+、2021.3.26+、2021.3.0+ 版本，直接从该版本的安装目录复制il2cpp文件。")]),t._v(" "),s("li",[t._v("对于2020.3.16-2020.3.20版本，需要额外安装2020.3.26或更高版本，使用"),s("code",[t._v("HybridCLR/Installer")]),t._v("安装后再切回当前版本。")]),t._v(" "),s("li",[t._v("对于2019.4.0-2019.4.39版本，需要额外安装2019.4.40版本，使用"),s("code",[t._v("HybridCLR/Installer")]),t._v("安装后再切回当前版本。")])]),t._v(" "),s("p",[t._v("安装界面中 "),s("code",[t._v("安装状态：已安装|未安装")]),t._v(" 指示是否完成HybridCLR初始化。")]),t._v(" "),s("p",[t._v("安装界面中 "),s("code",[t._v("il2cpp_plus分支对应的Unity兼容版本的il2cpp路径")]),t._v(" （"),s("strong",[t._v("注意！1.1.7版本移除了此设置。")]),t._v("）必须满足几个条件：")]),t._v(" "),s("ul",[s("li",[t._v("必须是兼容的unity版本的il2cpp目录")]),t._v(" "),s("li",[t._v("路径中必须包含unity版本号（Installer用来识别Unity版本，以及用于防止新手选错目录）")])]),t._v(" "),s("p",[t._v("如果路径合法，则界面显示正常，否则将会出现红色警告。")]),t._v(" "),s("p",[t._v("填写你要安装的hybridclr和il2cpp_plus仓库的branch或tag。如果hybridclr的版本号留空，则安装hybridclr仓库main分支的最新版本。\n如果il2cpp_plus的版本号留空，则安装相应年度版本（如2020.3.33）分支的最新版本。")]),t._v(" "),s("p",[t._v("点击安装，如成功，则最后会显示"),s("code",[t._v("安装成功")]),t._v("日志，并且安装状态切换为"),s("code",[t._v("已安装")]),t._v("，否则请检查错误日志。")]),t._v(" "),s("p",[t._v("如果已经安装HybridCLR，点击安装按钮会安装最新的HybridCLR版本的libil2cpp。")]),t._v(" "),s("h3",{attrs:{id:"compile-dll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-dll"}},[t._v("#")]),t._v(" Compile Dll")]),t._v(" "),s("p",[t._v("对于每个target，必须使用目标平台编译开关下编译出的热更新dll，否则会出现热更新代码与AOT主包或者热更新资源的代码信息不匹配的情况。")]),t._v(" "),s("p",[t._v("不匹配时Unity会打印此类日志： "),s("code",[t._v("A scripted object (probably XXX?) has a different serialization layout when loading. Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?")]),t._v("。")]),t._v(" "),s("p",[t._v("借助Unity的"),s("code",[t._v("PlayerBuildInterface.CompilePlayerScripts")]),t._v("Api，hybridclr_unity提供一个编译各个target对应的热更新dll的编译脚本，编译完成后的热更新dll放到 "),s("code",[t._v("{project}/HybridCLRData/HotUpdateDlls/{platform}")]),t._v(" 目录下。")]),t._v(" "),s("p",[t._v("开发者灵活选择恰当的方式去使用这些热更新dll。")]),t._v(" "),s("h3",{attrs:{id:"generate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate"}},[t._v("#")]),t._v(" Generate")]),t._v(" "),s("p",[t._v("Generate下包含多种生成工具。")]),t._v(" "),s("h4",{attrs:{id:"linkxml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkxml"}},[t._v("#")]),t._v(" LinkXml")]),t._v(" "),s("p",[t._v("扫描热更新dll引用的AOT类型，生成link.xml，避免热更新脚本用到的AOT类型或函数被裁剪。输出的文件路径在 HybridCLRSettings.asset中"),s("code",[t._v("OuputLinkXml")]),t._v("字段中指定，默认为"),s("code",[t._v("LinkGenerator/link.xml")]),t._v("。")]),t._v(" "),s("p",[t._v("更具体的裁剪相关介绍请看"),s("RouterLink",{attrs:{to:"/hybridclr/code_striping/"}},[t._v("代码裁剪原理及解决办法")]),t._v("。")],1),t._v(" "),s("h4",{attrs:{id:"aotdlls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aotdlls"}},[t._v("#")]),t._v(" AOTDlls")]),t._v(" "),s("p",[t._v("生成裁剪后的AOT dlls。脚本通过在一个临时目录导出工程，实现生成裁剪后的AOT dlls的目标。")]),t._v(" "),s("p",[t._v("注意，如果你没有用 "),s("code",[t._v("HybridCLR/Generate/All")]),t._v(" 这样的一键生成命令，在你手动生成裁剪后 AOTDlls 前请先通过 "),s("code",[t._v("HybridCLR/Generate/LinkXml")]),t._v(" 生成LinkXml。")]),t._v(" "),s("h4",{attrs:{id:"methodbridge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methodbridge"}},[t._v("#")]),t._v(" MethodBridge")]),t._v(" "),s("p",[t._v("根据当前的AOT dll集扫描生成桥接函数文件。HybridCLRSettings.asset中"),s("code",[t._v("maxGenericReferenceIteration")]),t._v("字段指定了泛型递归扫描最大迭代轮数。大多数项目取\n10以内即可。")]),t._v(" "),s("p",[t._v("更具体的桥接函数相关文档请看"),s("RouterLink",{attrs:{to:"/hybridclr/method_bridge/"}},[t._v("桥接函数")]),t._v("文档。")],1),t._v(" "),s("h4",{attrs:{id:"aotgenericreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aotgenericreference"}},[t._v("#")]),t._v(" AOTGenericReference")]),t._v(" "),s("p",[t._v("根据当前热更新dll扫描出所有产生的AOT泛型类型及函数的实例化，并生成一个"),s("strong",[t._v("启发的")]),t._v("泛型实例化文件。")]),t._v(" "),s("p",[t._v("HybridCLRSettings.asset中"),s("code",[t._v("outputAOTGenericReferenceFile")]),t._v("字段指定了输出文件路径，"),s("code",[t._v("maxGenericReferenceIteration")]),t._v("字段指定泛型递归扫描的最大迭代次数。")]),t._v(" "),s("p",[t._v("由于将扫描出的泛型类型及函数转换为对应的代码引用比较麻烦，生成的所有泛型实例化代码都是"),s("strong",[t._v("注释代码")]),t._v("，由开发者自己酌情转换为正确的实例化引用（"),s("strong",[t._v("这个操作是可选的，可以完全不处理或只处理一部分")]),t._v("），即在AOT代码中实例化这注释中的泛型类或泛型函数。方法大致如下：")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// System.Collections.Generics.List`1<System.Object>.ctor")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// System.Byte[] Array.Empty`1<System.Byte>()")]),t._v("\n    Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Empty")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("请在其他文件中添加泛型类型及函数的实例化引用，因为这个输出文件每次重新生成后会被覆盖。")]),t._v(" "),s("p",[t._v("这个泛型实例化文档只起到启发作用，告诉你可以aot泛型实例化哪些类和函数。使用补充元数据机制后，\n"),s("strong",[t._v("不作任何处理")]),t._v("也不影响正常运行。但如果手动对aot泛型实例化，可以提升性能。建议是对于少量性能敏感的类或函数手动泛型实例化即可，如"),s("code",[t._v("Dictionary<int,int>")]),t._v("之类。")]),t._v(" "),s("p",[t._v("更具体的AOT泛型相关文档请看"),s("RouterLink",{attrs:{to:"/hybridclr/aot_generic/"}},[t._v("AOT泛型介绍")]),t._v("。")],1),t._v(" "),s("h4",{attrs:{id:"reversepinvokewrapper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reversepinvokewrapper"}},[t._v("#")]),t._v(" ReversePInvokeWrapper")]),t._v(" "),s("p",[t._v("为标记了"),s("code",[t._v("[MonoPInvokeCallback]")]),t._v("注解的热更新C#静态函数生成一个 ReversePInvokeWrapper函数。这样每个热更新C#静态函数将有一个唯一对应的c++函数，\n可以被用于注册到lua之类的脚本语言中，并且被脚本语言调用。")]),t._v(" "),s("p",[t._v("HybridCLRSettings.asset中"),s("code",[t._v("reversePInvokeWrapperCount")]),t._v("字段指示生成的wrapper c++函数的个数，请预留足够多，确保超过热更新C#代码中标记了"),s("code",[t._v("[MonoPInvokeCallback]")]),t._v("注释的C#函数的个数。否则可能会抛出异常。")]),t._v(" "),s("p",[t._v("更具体的MonoPInvokeCallback介绍请看文档"),s("RouterLink",{attrs:{to:"/hybridclr/monopinvokecallback/"}},[t._v("MonoPInvokeCallback支持")])],1),t._v(" "),s("h4",{attrs:{id:"il2cppdef"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#il2cppdef"}},[t._v("#")]),t._v(" Il2CppDef")]),t._v(" "),s("p",[t._v("生成当前Unity版本相关宏定义。类似如下：")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Il2CppCompatibleDefs.h")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HYBRIDCLR_UNITY_VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020333")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HYBRIDCLR_UNITY_2020")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HYBRIDCLR_UNITY_2019_OR_NEW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HYBRIDCLR_UNITY_2020_OR_NEW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"dheassemblylist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dheassemblylist"}},[t._v("#")]),t._v(" DHEAssemblyList")]),t._v(" "),s("p",[s("strong",[t._v("DHE版本")]),t._v("专有字段。")]),t._v(" "),s("p",[t._v("生成差分混合assembly列表代码。")]),t._v(" "),s("p",[t._v("因为HybridCLR需要在il2cpp初始化的阶段对差分混合执行assembly作预处理，目前以生成的assembly列表代码的方式提供给HybridCLR。")]),t._v(" "),s("p",[t._v("示例如下:")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Il2CppCompatibleDefs.cpp 文件")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" g_differentialHybridAssemblies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!{{DHE")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Assembly-CSharp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!}}DHE")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"dheassemblyoptiondatas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dheassemblyoptiondatas"}},[t._v("#")]),t._v(" DHEAssemblyOptionDatas")]),t._v(" "),s("p",[s("strong",[t._v("DHE版本")]),t._v("专有字段。")]),t._v(" "),s("p",[t._v("生成 差分混合assembly的配置数据。")]),t._v(" "),s("p",[t._v("加载差分混合执行assembly需要一些配置数据。例如哪些函数发生变化是离线计算好的，这样不需要运行时判定函数是否发生变化了。配置数据在调用"),s("code",[t._v("RuntimeApi::LoadDifferentialHybridAssembly")]),t._v(" 作为参数传入。")]),t._v(" "),s("h4",{attrs:{id:"all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" All")]),t._v(" "),s("p",[t._v("一键执行上面4种生成操作。")]),t._v(" "),s("h2",{attrs:{id:"hybridclr-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr-配置"}},[t._v("#")]),t._v(" HybridCLR 配置")]),t._v(" "),s("p",[t._v("点击菜单 "),s("code",[t._v("HybridCLR/Settings")]),t._v(" 打开配置界面。下面是字段详细说明。")]),t._v(" "),s("h3",{attrs:{id:"enable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable"}},[t._v("#")]),t._v(" enable")]),t._v(" "),s("p",[t._v("是否开启HyridCLR热更。默认true。如果为false,则打包不再包含HybridCLR功能。")]),t._v(" "),s("h3",{attrs:{id:"useglobalil2cpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useglobalil2cpp"}},[t._v("#")]),t._v(" useGlobalIl2cpp")]),t._v(" "),s("p",[t._v("是否使用全局安装位置，即editor安装位置下的il2cpp目录。默认false。一般只有打包WebGL时才需要"),s("code",[t._v("useGlobalIl2cpp=true")]),t._v("。")]),t._v(" "),s("p",[t._v("注意，就算 "),s("code",[t._v("useGlobalIl2Cpp=true")]),t._v("，安装时仍然会复制il2cpp到HybridCLRData目录。\n需要手动将 "),s("code",[t._v("{project}/HyridCLRData/LocalIl2CppData-{platform}/il2cpp/libil2cpp")]),t._v(" 目录替换 editor安装目录下的对应目录。另外运行"),s("code",[t._v("HybridCLR/Generate/*")]),t._v("执行生成操作，输出目录仍然是本地目录，需要自己手动复制替换全局安装位置的libil2cpp目录。")]),t._v(" "),s("h3",{attrs:{id:"hybridclrrepourl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hybridclrrepourl"}},[t._v("#")]),t._v(" hybridclrRepoURL")]),t._v(" "),s("p",[t._v("hybridclr仓库的地址，默认值为 "),s("code",[t._v("https://gitee.com/focus-creative-games/hybridclr")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"il2cppplusrepourl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#il2cppplusrepourl"}},[t._v("#")]),t._v(" il2cppPlusRepoURL")]),t._v(" "),s("p",[t._v("il2cpp_plus 仓库的地址，默认值为 "),s("code",[t._v("https://gitee.com/focus-creative-games/il2cpp_plus")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"hotupdateassemblydefinitions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hotupdateassemblydefinitions"}},[t._v("#")]),t._v(" hotUpdateAssemblyDefinitions")]),t._v(" "),s("p",[t._v("以assembly definition(asmdef) 形式定义的热更新模块列表，它与下面的"),s("code",[t._v("hotUpdateAssemblies")]),t._v("是等效的，只不过编辑器下拖入asmdef模块比较方便，也不容易失误写错名称。")]),t._v(" "),s("p",[s("code",[t._v("hotUpdateAssemblyDefinitions")]),t._v("和"),s("code",[t._v("hotUpdateAssemblies")]),t._v("合并后构成最终的热更新dll列表。同一个assembly不要在两个列表中同时出现，会报错！")]),t._v(" "),s("h3",{attrs:{id:"hotupdateassemblies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hotupdateassemblies"}},[t._v("#")]),t._v(" hotUpdateAssemblies")]),t._v(" "),s("p",[t._v("有一些assembly以dll形式存在，例如你在外部工程中创建的热更新dll，又如你直接使用Assembly-CSharp作为你的热更新dll。由于没有对应的asmdef文件，只能以dll名称形式手动配置。")]),t._v(" "),s("p",[t._v("填写assembly名称时不要包含'.dll'后缀，像"),s("code",[t._v("Main")]),t._v("、"),s("code",[t._v("Assembly-CSharp")]),t._v("这样即可。")]),t._v(" "),s("p",[t._v("asmdef形式的assembly，你也可以选择不加到"),s("code",[t._v("hotUpdateAssemblyDefinitions")]),t._v("，而是加到"),s("code",[t._v("hotUpdateAssemblies")]),t._v("。不过这样不如直接拖入列表方便，你自己酌情选择。")]),t._v(" "),s("p",[s("code",[t._v("hotUpdateAssemblyDefinitions")]),t._v("和"),s("code",[t._v("hotUpdateAssemblies")]),t._v("合并后构成最终的热更新dll列表。同一个assembly不要在两个列表中同时出现，会报错！")]),t._v(" "),s("h3",{attrs:{id:"preservehotupdateassemblies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preservehotupdateassemblies"}},[t._v("#")]),t._v(" preserveHotUpdateAssemblies")]),t._v(" "),s("p",[t._v("预留的热更新dll名字列表。有时候想在将来新增一些热更新dll，并且期望这些新的热更新dll的脚本能够挂载到资源上。如果直接将热更新dll名加到 hotUpdateAssemblies则会报assembly不存在的错误。preserveHotUpdateAssemblies字段用来满足这种需求。打包时不检查这些dll的有效性，并且会将它们添加到scriptingassemblies.json之类的assembly列表文件中。")]),t._v(" "),s("p",[t._v("填写assembly名称时不要包含'.dll'后缀，像"),s("code",[t._v("Abc")]),t._v("这样即可。")]),t._v(" "),s("h3",{attrs:{id:"hotupdatedllcompileoutputrootdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hotupdatedllcompileoutputrootdir"}},[t._v("#")]),t._v(" hotUpdateDllCompileOutputRootDir")]),t._v(" "),s("p",[t._v("编译后的热更新dll的输出根目录。最终输出目录在该目录的平台子目录下，即 "),s("code",[t._v("${hotUpdateDllCompileOutputRootDir}/{platform}")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"externalhotupdateassemblydirs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#externalhotupdateassemblydirs"}},[t._v("#")]),t._v(" externalHotUpdateAssemblyDirs")]),t._v(" "),s("p",[t._v("自定义外部热更新dll的搜索路径。有一些框架或项目的热更新项目放到Unity外部，编译出的dll也在外部。这个参数提供了一个热更新dll\n的搜索路径，这样不需要每次将外部dll复制到工程里或者复制到 hotUpdateAssemblies 目录了。")]),t._v(" "),s("ul",[s("li",[t._v("按搜索路径的顺序搜索，排在越前的优先级越高。")]),t._v(" "),s("li",[t._v("搜索路径必须是相对位置，相对于项目根目录（即Assets的"),s("strong",[t._v("上级目录")]),t._v("）。即填"),s("code",[t._v("mydir")]),t._v("，搜索"),s("code",[t._v("{proj}/mydir")]),t._v("。")]),t._v(" "),s("li",[t._v("每个路径"),s("code",[t._v("dir")]),t._v("，会先尝试搜索"),s("code",[t._v("{dir}/{platform}")]),t._v("，再尝试搜索"),s("code",[t._v("{dir}")]),t._v("。这样做为了兼顾平台特殊性及通用性。")])]),t._v(" "),s("p",[t._v("下面展示一个使用示例。你有一个外部dll，它的位置为 "),s("code",[t._v("{proj}/MyDir1/MyDir2/Foo.dll")]),t._v("，则你应该：")]),t._v(" "),s("ul",[s("li",[t._v("在 hotUpdateAssemblies 添加 "),s("code",[t._v("Foo")])]),t._v(" "),s("li",[t._v("在 externalHotUpdateAssemblyDirs 里添加目录 "),s("code",[t._v("MyDir1/Mydir2")])])]),t._v(" "),s("h3",{attrs:{id:"strippedaotdlloutputrootdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strippedaotdlloutputrootdir"}},[t._v("#")]),t._v(" strippedAOTDllOutputRootDir")]),t._v(" "),s("p",[t._v("裁剪后的AOT dll的暂存目录。最终目录在该目录的平台子目录下，即 "),s("code",[t._v("${strippedAOTDllOutputRootDir}/{platform}")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"patchaotassemblies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patchaotassemblies"}},[t._v("#")]),t._v(" patchAOTAssemblies")]),t._v(" "),s("p",[t._v("补充元数据AOT dll列表。package本身没有用到这个配置项。但它提供了一个配置AOT dll列表的地方，方便开发者在自己的打包流程中使用，这样就不用开发者单独再定义一个AOT dll配置脚本了。")]),t._v(" "),s("p",[t._v("填写assembly名称时不要包含'.dll'后缀，像"),s("code",[t._v("Main")]),t._v("、"),s("code",[t._v("Assembly-CSharp")]),t._v("这样即可。")]),t._v(" "),s("h3",{attrs:{id:"differentialhybridassemblies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#differentialhybridassemblies"}},[t._v("#")]),t._v(" differentialHybridAssemblies")]),t._v(" "),s("p",[s("strong",[t._v("注意！1.1.7版本移除了此字段。")])]),t._v(" "),s("p",[t._v("差分混合执行的assembly列表。差分混合执行的assembly与纯热更新的assembly不是同一类assembly，不能同时出现在hotUpdateAssemblies列表中。")]),t._v(" "),s("h3",{attrs:{id:"differentialhybridoptionoutputdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#differentialhybridoptionoutputdir"}},[t._v("#")]),t._v(" differentialHybridOptionOutputDir")]),t._v(" "),s("p",[s("strong",[t._v("注意！1.1.7版本移除了此字段。")])]),t._v(" "),s("p",[t._v("差分混合执行的assembly的运行时配置参数。")]),t._v(" "),s("p",[t._v("需要向差分混合执行的assembly传递一些配置参数，比如说哪些函数发生变化了。这些配置数据是 "),s("code",[t._v("LoadImageErrorCode RuntimeApi::LoadDifferentialHybridAssembly(byte[] dllBytes, byte[] optionBytes)")]),t._v(" 的optionBytes参数.")]),t._v(" "),s("h3",{attrs:{id:"collectassetreferencetypes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collectassetreferencetypes"}},[t._v("#")]),t._v(" collectAssetReferenceTypes")]),t._v(" "),s("p",[t._v("收集资源中引用的脚本类型，加入到 "),s("code",[t._v("HybridCLR/Generate/LinkXml")]),t._v(" 的保留集。")]),t._v(" "),s("h3",{attrs:{id:"outputlinkfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outputlinkfile"}},[t._v("#")]),t._v(" outputLinkFile")]),t._v(" "),s("p",[t._v("运行菜单"),s("code",[t._v("HybridCLR/Generate/LinkXml")]),t._v("命令时，输出的link.xml文件路径。")]),t._v(" "),s("p",[t._v("千万不要指向 "),s("code",[t._v("Assets/link.xml")]),t._v("，那个link.xml一般用来手动预留AOT类型，而这个自动输出的link.xml每次都会覆盖。")]),t._v(" "),s("h3",{attrs:{id:"outputaotgenericreferencefile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outputaotgenericreferencefile"}},[t._v("#")]),t._v(" outputAOTGenericReferenceFile")]),t._v(" "),s("p",[t._v("运行菜单"),s("code",[t._v("HybridCLR/Generate/AOTGenericReference")]),t._v("时输出的AOT泛型实例化集合文件的路径。")]),t._v(" "),s("h3",{attrs:{id:"maxgenericreferenceiteration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxgenericreferenceiteration"}},[t._v("#")]),t._v(" maxGenericReferenceIteration")]),t._v(" "),s("p",[t._v("运行菜单"),s("code",[t._v("HybridCLR/Generate/AOTGenericReference")]),t._v("时，生成工具递归分析AOT泛型实例化的迭代次数。")]),t._v(" "),s("p",[t._v("因为泛型函数中可能会间接使用了新的泛型类和泛型函数，因此需要多轮迭代才能分析出所有的泛型实例化，"),s("code",[t._v("maxGenericReferenceIteration")]),t._v("参数用于控制迭代次数。这个参数一般10以内就够了，你通过观察日志\n能看到几轮迭代后计算终止，如果迭代终止时还有大量泛型未计算迭代，可以适当增加这个值。")]),t._v(" "),s("p",[t._v("为什么不反复迭代直至计算出所有泛型实例化呢？因为有可能出现永远无法计算完的情况。如下代码，AOT.Show()\n由于递归泛型实例化，永远也无法计算完。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("AOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("AOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:"maxmethodbridgegenericiteration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxmethodbridgegenericiteration"}},[t._v("#")]),t._v(" maxMethodBridgeGenericIteration")]),t._v(" "),s("p",[t._v("运行菜单"),s("code",[t._v("HybridCLR/Generate/MethodBridge")]),t._v("时，生成工具递归分析AOT泛型实例化的迭代次数。含义与"),s("code",[t._v("maxGenericReferenceIteration")]),t._v("相似。")]),t._v(" "),s("h2",{attrs:{id:"editor相关工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#editor相关工具"}},[t._v("#")]),t._v(" Editor相关工具")]),t._v(" "),s("p",[t._v("主要包含以下功能：")]),t._v(" "),s("ul",[s("li",[t._v("初始化HybridCLR")]),t._v(" "),s("li",[t._v("检查和修复设置")]),t._v(" "),s("li",[t._v("打包时自动排除热更新assembly")]),t._v(" "),s("li",[t._v("打包时将热更新dll名添加到assembly列表")]),t._v(" "),s("li",[t._v("备份裁剪后的AOT dll")]),t._v(" "),s("li",[t._v("生成一些打包需要的文件和代码")]),t._v(" "),s("li",[t._v("编译用于目标平台的热更新dll")])]),t._v(" "),s("h3",{attrs:{id:"初始化hybridclr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化hybridclr"}},[t._v("#")]),t._v(" 初始化HybridCLR")]),t._v(" "),s("p",[t._v("运行"),s("code",[t._v("HybridCLR/Installer...")]),t._v("菜单命令完成初始化操作。详细见上面的菜单命令介绍。")]),t._v(" "),s("h3",{attrs:{id:"检查和修复设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查和修复设置"}},[t._v("#")]),t._v(" 检查和修复设置")]),t._v(" "),s("p",[t._v("属于打包工作流的一部分，相关代码在 "),s("code",[t._v("Editor/BuildProcessors/CheckSettings.cs")]),t._v("中。")]),t._v(" "),s("p",[t._v("包含以下操作：")]),t._v(" "),s("ul",[s("li",[t._v("根据是否开启HybridCLR，设置或者清除UNITY_IL2CPP_PATH环境变量。脚本中修改的UNITY_IL2CPP_PATH环境变量是本进程的环境变量，不用担心干扰了其他项目。")]),t._v(" "),s("li",[t._v("如果检测到意外开启增量式GC，自动关闭这个选项。")]),t._v(" "),s("li",[t._v("如果HybridCLRSettings里未设置任何热更新assembly，提示错误。")])]),t._v(" "),s("h3",{attrs:{id:"打包时自动排除热更新assembly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包时自动排除热更新assembly"}},[t._v("#")]),t._v(" 打包时自动排除热更新assembly")]),t._v(" "),s("p",[t._v("属于打包工作流的一部分，相关代码在 "),s("code",[t._v("Editor/BuildProcessors/FilterHotFixAssemblies.cs")]),t._v("中。")]),t._v(" "),s("p",[t._v("很显然，热更新assembly不应该被il2cpp处理并且编译到最终的包体里。我们处理了"),s("code",[t._v("IFilterBuildAssemblies")]),t._v("回调，\n将热更新dll从build assemblies列表移除。")]),t._v(" "),s("p",[t._v("脚本中会额外检查是否写错assembly名字，以及是否失误配置了重复的assembly。")]),t._v(" "),s("h3",{attrs:{id:"打包时将热更新dll名添加到assembly列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包时将热更新dll名添加到assembly列表"}},[t._v("#")]),t._v(" 打包时将热更新dll名添加到assembly列表")]),t._v(" "),s("p",[t._v("属于打包工作流的一部分，相关代码在 "),s("code",[t._v("Editor/BuildProcessors/PatchScriptingAssemblyList.cs")]),t._v("中。")]),t._v(" "),s("p",[t._v("工具在打包时，会自动将热更新assembly的dll名加入assembly列表配置文件。")]),t._v(" "),s("p",[t._v("热更新MonoBehaviour脚本所在的assembly的dll名必须添加到assembly列表配置文件，Unity的资源管理系统才能正确识别\n和还原热更新脚本。更详细的原理介绍请看 "),s("RouterLink",{attrs:{to:"/hybridclr/monobehaviour/"}},[t._v("使用热更新MonoBehaviour")]),t._v(" 。")],1),t._v(" "),s("h3",{attrs:{id:"备份裁剪后的aot-dll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份裁剪后的aot-dll"}},[t._v("#")]),t._v(" 备份裁剪后的AOT dll")]),t._v(" "),s("p",[t._v("属于打包工作流的一部分，相关代码在 "),s("code",[t._v("Editor/BuildProcessors/CopyStrippedAOTAssemblies.cs")]),t._v("中。")]),t._v(" "),s("p",[t._v("当补充元数据模式为"),s("code",[t._v("HomologousImageMode::Consistent")]),t._v("时，需要使用打包时生成的裁剪后的AOT dll。因此会自动将打包过程中生成的裁剪后的AOT dll\n复制到 "),s("code",[t._v("{project}/HybridCLRData/AssembliesPostIl2CppStrip/{platform}")]),t._v("目录，方便将来处理。")]),t._v(" "),s("p",[t._v("当数据模式为"),s("code",[t._v("HomologousImageMode::SuperSet")]),t._v("时，可以直接使用原始的aot dll。这个优点是工作流上便利一些，不用每次打包后更新aot dll，缺点是多占了内存，同时大幅增加了裁剪dll的大小，请使用者自己权衡使用原始还是裁剪后的aot dll。")]),t._v(" "),s("p",[s("code",[t._v("补充元数据")]),t._v(" 更详细的原理性文档请看 "),s("RouterLink",{attrs:{to:"/hybridclr/aot_generic/"}},[t._v("AOT泛型原理")])],1),t._v(" "),s("h3",{attrs:{id:"生成一些打包需要的文件和代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成一些打包需要的文件和代码"}},[t._v("#")]),t._v(" 生成一些打包需要的文件和代码")]),t._v(" "),s("p",[t._v("包含以下几个生成功能：")]),t._v(" "),s("ul",[s("li",[t._v("扫描生成link.xml")]),t._v(" "),s("li",[t._v("生成桥接函数")]),t._v(" "),s("li",[t._v("生成AOT泛型实例化代码")]),t._v(" "),s("li",[t._v("生成ReversePInvokeCallback相关wrapper文件")])]),t._v(" "),s("p",[t._v("菜单"),s("code",[t._v("HybridCLR/Generate/*")]),t._v("中包含了这些生成命令，请看上面的介绍文档。")]),t._v(" "),s("h2",{attrs:{id:"iosbuild脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iosbuild脚本"}},[t._v("#")]),t._v(" iOSBuild脚本")]),t._v(" "),s("p",[t._v("package中 "),s("code",[t._v("Editor/Data~/iOSBuild")]),t._v(" 包含了编译iOS版本libil2cpp.a所需的脚本。在运行"),s("code",[t._v("HybridCLR/Installer...")]),t._v("菜单命令成功初始化HybridCLR后，会自动复制到"),s("code",[t._v("{project}/HybridCLRData/iOSBuild")]),t._v("目录。"),s("strong",[t._v("后续操作必须在"),s("code",[t._v("{project}/HybridCLRData/iOSBuild")]),t._v("目录进行")]),t._v("。")]),t._v(" "),s("p",[t._v("build libil2cpp.a的具体操作请看文档 "),s("RouterLink",{attrs:{to:"/hybridclr/build_ios_libil2cpp/"}},[t._v("iOS平台打包")]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"runtime相关脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runtime相关脚本"}},[t._v("#")]),t._v(" Runtime相关脚本")]),t._v(" "),s("p",[t._v("包含运行时用到的类。目前比较简单。")]),t._v(" "),s("h3",{attrs:{id:"loadimageerrorcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadimageerrorcode"}},[t._v("#")]),t._v(" LoadImageErrorCode")]),t._v(" "),s("p",[t._v("加载热更新dll的错误码。")]),t._v(" "),s("h3",{attrs:{id:"元数据模式-homologousimagemode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元数据模式-homologousimagemode"}},[t._v("#")]),t._v(" 元数据模式 HomologousImageMode")]),t._v(" "),s("p",[t._v("目前支持两种元数据模式：")]),t._v(" "),s("h4",{attrs:{id:"homologousimagemode-consistent-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#homologousimagemode-consistent-模式"}},[t._v("#")]),t._v(" "),s("code",[t._v("HomologousImageMode::Consistent")]),t._v(" 模式")]),t._v(" "),s("p",[t._v("即补充的dll与打包时裁剪后的dll精确一致。因此必须使用build过程中生成的裁剪后的dll，则不能直接复制原始dll。我们在"),s("code",[t._v("HybridCLR.BuildProcessors.CopyStrippedAOTAssemblies")]),t._v("里添加了处理代码，在打包时自动将这些裁剪后的dll复制到 "),s("code",[t._v("{project}/HybridCLRData/AssembliesPostIl2CppStrip/{target}")]),t._v(" 目录。")]),t._v(" "),s("h4",{attrs:{id:"homologousimagemode-superset-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#homologousimagemode-superset-模式"}},[t._v("#")]),t._v(" "),s("code",[t._v("HomologousImageMode::SuperSet")]),t._v(" 模式")]),t._v(" "),s("p",[t._v("即补充的dll是打包时裁剪后的dll的超集，包含了裁剪dll的所有元数据。一个最简单易得的超集dll为原始aot dll，这也是推荐使用的超集dll。")]),t._v(" "),s("ul",[s("li",[t._v("原始UnityEngine相关AOT dll在Unity安装目录的PlayBackEngines子目录下")]),t._v(" "),s("li",[t._v("原始的.net核心AOT dll如mscorlib.dll在Unity安装目录的 "),s("code",[t._v("unityaot{xxx}")]),t._v(" 目录下。2019-2020统一为unityaot目录，2021起拆分成多个目录，如果打包android取unityaot-linux、如果打包iOS取unityaot-macos。")]),t._v(" "),s("li",[t._v("插件的AOT dll为工程目录中的相应平台的原始dll。如果是源码形式，则为编译好的dll，取"),s("code",[t._v("HybridCLR/HotUpdateDlls/{platform}")]),t._v("目录下的相应dll即可")])]),t._v(" "),s("p",[t._v("以Unity 2020.3.33版本Win下的Win64目标为例：")]),t._v(" "),s("ul",[s("li",[t._v("mscorlib.dll在 "),s("code",[t._v("{editor}/Editor/Data/MonoBleedingEdge/lib/mono/unityaot")])]),t._v(" "),s("li",[t._v("UnityEngine.CoreModule.dll 在 "),s("code",[t._v("{editor}/Editor/Data/Playbackengines/windowsstandalonesupport/Variations/il2cpp/Managed")])]),t._v(" "),s("li",[t._v("protobuf-net.dll 为你的工程中的原始"),s("code",[t._v("protobuf-net.dll")])]),t._v(" "),s("li",[t._v("你的AOT模块Main对应的AOT dll为 "),s("code",[t._v("HybridCLR/HotUpdateDlls/{platform}/Main.dll")])])]),t._v(" "),s("p",[s("code",[t._v("SuerSet")]),t._v("模式也可以使用"),s("code",[t._v("Consistent")]),t._v("模式的裁减后的dll，因为自己显然包含自身的所有元数据。但"),s("code",[t._v("SuperSet")]),t._v("模式主要为了简化工作流，避免"),s("code",[t._v("Consistent")]),t._v("模式经常出现的"),s("code",[t._v("metadata not match")]),t._v("的问题，因此除非要极致优化内存，强烈推荐使用原始AOT dll。")]),t._v(" "),s("h3",{attrs:{id:"runtimeapi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runtimeapi"}},[t._v("#")]),t._v(" RuntimeApi")]),t._v(" "),s("p",[t._v("底层的操作HybridCLR的工具类。比较常用的有几个")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("LoadImageErrorCode LoadMetadataForAOTAssembly(byte[] dllBytes, HomologousImageMode mode)")]),t._v(" 用于加载补充元数据assembly。")]),t._v(" "),s("li",[s("code",[t._v("LoadImageErrorCode LoadDifferentialHybridAssembly(byte[] dllBytes, byte[] optionBytes)")]),t._v(" 加载差分混合执行assembly。"),s("strong",[t._v("DHE版本")]),t._v("专有函数。")])]),t._v(" "),s("h3",{attrs:{id:"unchangedattribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unchangedattribute"}},[t._v("#")]),t._v(" UnchangedAttribute")]),t._v(" "),s("p",[s("strong",[t._v("DHE版本")]),t._v("专有类型。")]),t._v(" "),s("p",[t._v("对于 差分混合执行assembly，用于手动指定哪些函数是否发生变化。变化的函数以interpreter模式执行，未变化的以原生AOT方式执行。")]),t._v(" "),s("p",[t._v("当前出于演示目的，未变化的函数需要手动标记，后面的正式版本会自动计算，基本用不上这个特性。")]),t._v(" "),s("h3",{attrs:{id:"reversepinvokewrappergenerationattribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reversepinvokewrappergenerationattribute"}},[t._v("#")]),t._v(" ReversePInvokeWrapperGenerationAttribute")]),t._v(" "),s("p",[t._v("每个带 "),s("code",[t._v("[MonoPInvokeCallback]")]),t._v(" 特性的函数都需要一个唯一对应的wrapper函数。这些wrapper函数必须是打包时预先生成，不可变化。\n因此如果后续热更新新增了 带 "),s("code",[t._v("[MonoPInvokeCallback]")]),t._v(" 特性的函数，则会发生wrapper函数不足的情况。")]),t._v(" "),s("p",[t._v("ReversePInvokeWrapperGenerationAttribute 用于为当前添加了 "),s("code",[t._v("[MonoPInvokeCallback]")]),t._v(" 特性的函数预留指定数量的wrapper函数。")]),t._v(" "),s("p",[t._v("在如下示例中，为LuaFunction签名的函数预留了10个wrapper函数.")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delegate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LuaFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntPtr")]),t._v(" luaState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoPInvokeWrapperPreserves")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReversePInvokeWrapperGeneration")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoPInvokeCallback")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("LuaFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LuaCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntPtr")]),t._v(" luaState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoPInvokeCallback")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoPInvokeCallback")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoPInvokeCallback")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);