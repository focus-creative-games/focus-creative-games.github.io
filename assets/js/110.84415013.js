(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{430:function(e,t,i){"use strict";i.r(t);var o=i(7),r=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("This document assumes that you have understood the packaging and building process under Windows or Mac, and understood the relevant precautions.")]),e._v(" "),t("h1",{attrs:{id:"ios-packaging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ios-packaging"}},[e._v("#")]),e._v(" iOS packaging")]),e._v(" "),t("p",[e._v("The xcode project generated when Unity packages the iOS target does not contain the libil2cpp source code like other platforms, but uses the pre-compiled libil2cpp.a. To compile an app that supports HybridCLR hot update, it needs to be replaced with the extended HybridCLR code libil2cpp.a. "),t("strong",[e._v("Replace the libil2cpp.a file in the xcode project, please do it yourself")]),e._v(", the following only introduces how to compile libil2cpp.a.")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("com.focus-creative-games.hybridclr_unity"),t("OutboundLink")],1),e._v("/Data~/iOSBuild directory contains the scripts needed to compile "),t("code",[e._v("libil2cpp.a")]),e._v(". After installing the package and successfully initializing the HybridCLR plugin using the "),t("code",[e._v("HybridCLR/Installer...")]),e._v(" command, the iOSBuild directory is copied to the "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" directory. The compilation operations mentioned below are all completed under the "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" directory.")]),e._v(" "),t("h2",{attrs:{id:"libil2cpp-a-compile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#libil2cpp-a-compile"}},[e._v("#")]),e._v(" libil2cpp.a compile")]),e._v(" "),t("ul",[t("li",[e._v("Make sure your macOS version >=12 and xcode version >=13. Which is the minimum supported version we haven't carefully verified.")]),e._v(" "),t("li",[e._v("Make sure HybridCLR is installed and the plugin is successfully initialized using the menu "),t("code",[e._v("HybridCLR/Installer...")])]),e._v(" "),t("li",[e._v("Check your project's HybriCLRSettings configuration (menu "),t("code",[e._v("HybridCLR/Settings")]),e._v(") to make sure the parameters are set correctly.")]),e._v(" "),t("li",[e._v("Click menu "),t("code",[e._v("HybridCLRData/Generate/All")]),e._v(" to generate all necessary files")]),e._v(" "),t("li",[t("strong",[e._v("OPTIONAL")]),e._v(" Set "),t("code",[e._v("IPHONESIMULATOR_VERSION")]),e._v(" variable. This variable indicates the version of iPhoneSimulator. If it is not set, the system default version of iPhoneSimulator will be used. Command like this "),t("code",[e._v("export IPHONESIMULATOR_VERSION=15.5")])]),e._v(" "),t("li",[e._v("Open the command console and switch to the "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" directory. Please make sure the absolute path of this path does not contain spaces! otherwise error")]),e._v(" "),t("li",[e._v("bash ./build_libil2cpp.sh compiles libil2cpp.a. After running, if the libil2cpp.a file can be found in the "),t("code",[e._v("iOSBuild/build")]),e._v(" directory and the size is greater than 60M, it means the compilation is successful")])]),e._v(" "),t("h2",{attrs:{id:"common-errors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-errors"}},[e._v("#")]),e._v(" Common errors")]),e._v(" "),t("ul",[t("li",[e._v("Attempt to build without installing HybridCLR correctly")]),e._v(" "),t("li",[e._v("Newer macOS (below 12) and the latest xcode are not installed")]),e._v(" "),t("li",[e._v("Due to the git setting, the pulled build_libil2cpp.sh and build_lump.sh contain incorrect file end characters, which cause errors in the first few lines of code when the script runs. Error messages are also obvious, such as "),t("code",[e._v("/bin/bash^M file does not exist")]),e._v(". Run the command "),t("code",[e._v("cat -v build_libil2cpp.sh")]),e._v(" to check that the line breaks are correct. Run "),t("code",[e._v("git config --global core.autocrlf input")]),e._v(", and then pull these two script files again. For details, please refer to "),t("a",{attrs:{href:"https://docs.github.com/cn/get-started/getting-started-with-git/configuring-git-to-handle-line-endings",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Line Break Settings"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("The absolute path to "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" contains spaces, causing the gen_lump.sh script to generate wrong results")])])])}),[],!1,null,null,null);t.default=r.exports}}]);