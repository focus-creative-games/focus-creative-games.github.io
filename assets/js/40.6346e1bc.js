(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{360:function(t,l,o){"use strict";o.r(l);var e=o(7),s=Object(e.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"hotreload-热重载技术"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#hotreload-热重载技术"}},[t._v("#")]),t._v(" HotReload 热重载技术")]),t._v(" "),l("p",[t._v("HotReload技术用于卸载或者重新加载一个dll，适用于小游戏合集类型的游戏。该方案只提供"),l("strong",[t._v("商业化版本")]),t._v("，具体请见"),l("RouterLink",{attrs:{to:"/hybridclr/price/"}},[t._v("商业化服务")]),t._v("。")],1),t._v(" "),l("ul",[l("li",[t._v("【优点】支持动态重新加载全新的AOT或热更新Assembly，代码可以任意变更")]),t._v(" "),l("li",[t._v("【优点】重新加载的Assembly代码可以任意变化甚至完全不同")]),t._v(" "),l("li",[t._v("【优点】卸载大部分内存，但有少量残留（如类型静态成员字段占据的内存）")]),t._v(" "),l("li",[t._v("【缺点】要求业务代码有清理逻辑，主动清除旧对象（核心是确保不会再调用旧代码），并且退出所有在执行的旧逻辑")]),t._v(" "),l("li",[t._v("【缺点】要求重载后在旧Assembly中存在同名类的MonoBehaviour中的被Unity引擎特殊处理函数如Awake之类不发生增删（但函数体可以变化）")])])])}),[],!1,null,null,null);l.default=s.exports}}]);