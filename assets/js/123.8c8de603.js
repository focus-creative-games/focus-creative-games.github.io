(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{441:function(e,t,a){"use strict";a.r(t);var n=a(7),i=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://opensource.org/licenses/MIT",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"http://img.shields.io/badge/license-MIT-blue.svg?style=flat-square",alt:"license"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://travis-ci.com/focus-creative-games/luban",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://travis-ci.com/focus-creative-games/luban.svg?style=flat-square&branch=main",alt:"Build Status"}}),t("OutboundLink")],1),e._v(" "),t("img",{attrs:{src:"https://img.shields.io/docker/cloud/automated/hugebug4ever/luban.svg?style=flat-square",alt:"Docker Auto"}}),e._v(" "),t("img",{attrs:{src:"https://img.shields.io/docker/cloud/build/hugebug4ever/luban.svg?style=flat-square",alt:"Docker Build"}}),e._v(" "),t("img",{attrs:{src:"https://img.shields.io/github/stars/focus-creative-games/luban?style=flat-square",alt:"star"}})]),e._v(" "),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"/img/luban/icon.png",alt:"icon"}})])]),t("h2",{attrs:{id:"introduce"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduce"}},[e._v("#")]),e._v(" introduce")]),e._v(" "),t("p",[e._v("Luban is a powerful generation and caching tool. Originally used only for object generation, objects can be regular code, configuration data, protobuf-like message codes, or game resources such as assetbundles.\nIn large projects, generating objects can take considerable time due to large configuration or resource data. For example, in a typical MMORPG project, the configuration is fully generated in the later stage, even if multi-thread acceleration is used, the time required\nAlso at the 10-second level. Therefore, the client/server mode is used with the caching mechanism to greatly speed up the generation process.")]),e._v(" "),t("p",[e._v("Luban was originally designed to solve the pain point that the traditional excel export tool is too weak to solve the complex configuration requirements of MMORPG games. Since 2015, it has experienced the test of many online projects such as MMORPG, card, SLG, etc.\nDuring the actual project process, it is constantly iterated and optimized, and the understanding is gradually deepened. Finally, an enhanced configuration tool becomes a "),t("strong",[e._v("relatively complete game configuration data solution")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("Luban has a complete type system;")]),e._v(" "),t("li",[e._v("Support enhanced excel format;")]),e._v(" "),t("li",[e._v("Multiple raw file format support;")]),e._v(" "),t("li",[e._v("Support for multiple export data formats;")]),e._v(" "),t("li",[e._v("Supports grouping, labeling, and data verification capabilities;")]),e._v(" "),t("li",[e._v("Provide localization support;")]),e._v(" "),t("li",[e._v("Support mainstream game development languages;")]),e._v(" "),t("li",[e._v("Support mainstream engines and platforms;")])]),e._v(" "),t("h2",{attrs:{id:"design-concept"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design-concept"}},[e._v("#")]),e._v(" design concept")]),e._v(" "),t("p",[e._v("Luban is a data format conversion tool that can handle the conversion between mainstream common data formats, such as json, excel, lua, xml, etc. After supporting many game development-related functions, luban can become a complete game configuration data solution. Not only in the generation of game configurations, but also in the migration and expansion of game configurations. Luban's complete type system can ensure that it can define and represent these data, so that Luban can output these data as any data representation format supported by Luban.")]),e._v(" "),t("p",[e._v("The data of luban is divided into two parts, namely data definition and data content. For example, the data definition can use the xml file format, while the data content is filled in excel; and the data definition and data content can be filled in excel at the same time. When the data definition and content are in excel, it is very convenient to put the data definition and content in one place by using a special label in the table header. Excel relies on the powerful expression form of the table, so that the data definition and content can be written together; but it is not so lucky when using json, lua and other data as the original data. At this time, the data definition and content must be separated. Usually, the data definition uses xml Fill in, and the data content is read in in any format.")]),e._v(" "),t("p",[e._v("As a data conversion tool, luban is usually understood as excel export, which is only one of its supported features; understanding this principle is of great help when using luban's advanced features.")]),e._v(" "),t("div",{staticClass:"center-container"},[t("img",{staticStyle:{"max-width":"70%",cursor:"zoom-in"},attrs:{src:"/img/luban/process.jpg",alt:"数据流转流程图"}})]),t("h2",{attrs:{id:"support-and-contact"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#support-and-contact"}},[e._v("#")]),e._v(" Support and Contact")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/about/"}},[e._v("Support & Contact")])],1)]),e._v(" "),t("h2",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" license")]),e._v(" "),t("p",[e._v("Luban is licensed under the "),t("a",{attrs:{href:"https://github.com/focus-creative-games/luban/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[e._v("MIT"),t("OutboundLink")],1),e._v(" license")])])}),[],!1,null,null,null);t.default=i.exports}}]);