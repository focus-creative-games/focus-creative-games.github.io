(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{448:function(e,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"introduce"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduce"}},[e._v("#")]),e._v(" Introduce")]),e._v(" "),t("h2",{attrs:{id:"functions-and-differences-of-luban-client-luban-server-and-luban-clientserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions-and-differences-of-luban-client-luban-server-and-luban-clientserver"}},[e._v("#")]),e._v(" Functions and differences of Luban.Client, Luban.Server and Luban.ClientServer")]),e._v(" "),t("p",[e._v("The default working model of Luban is the cloud generation model, that is, Luban.Client submits the generation request to the remote Luban.Server, and Luban.Server returns the generation result to Luban.Client.\nFor projects that use the Luban cloud-generated working model, you need to deploy Luban.Server on a server (of course, you can also run it locally), and then change the -h parameter of Luban.Client to the IP of the server.")]),e._v(" "),t("p",[e._v("Luban.ClientServer is an integrated program of Luban.Client+Luban.Server, embedded with Luban.Client and Luban.Server, and its working principle is consistent with the mode of cloud generation.")]),e._v(" "),t("p",[e._v("Some projects are small in scale, or for individual developers who do not want to deploy Luban.Server, you can use the Luban.ClientServer tool.")]),e._v(" "),t("h2",{attrs:{id:"advantages-of-cloud-generation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#advantages-of-cloud-generation"}},[e._v("#")]),e._v(" Advantages of cloud generation")]),e._v(" "),t("p",[e._v("In the cloud generation mode, Luban.Server will cache the generated results, and directly return the generated results for the configuration tables whose definitions and data have not changed. In daily development, only individual tables are often changed. After using cloud generation, only the data of the changed tables will be generated.\nThe generation time is greatly shortened, and the daily generation time is basically on the order of 300ms. For a large project like MMORPG, the daily generation is basically within 1s, which saves a considerable amount of time.")]),e._v(" "),t("h2",{attrs:{id:"subordinates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subordinates"}},[e._v("#")]),e._v(" Subordinates")]),e._v(" "),t("p",[e._v("There are two ways to deploy the Luban tool.")]),e._v(" "),t("h3",{attrs:{id:"method-1-luban-client-and-luban-server-are-deployed-independently-cloud-generation-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#method-1-luban-client-and-luban-server-are-deployed-independently-cloud-generation-mode"}},[e._v("#")]),e._v(" Method 1: Luban.Client and Luban.Server are deployed independently, cloud generation mode")]),e._v(" "),t("h4",{attrs:{id:"deploy-luban-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-luban-server"}},[e._v("#")]),e._v(" Deploy luban-server")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Based on docker (it is strongly recommended to deploy luban-server on the server in this way, because the caching mechanism can be fully utilized to greatly shorten the generation time)")]),e._v(" "),t("p",[e._v("docker run -d --rm --name luban-server -p 8899:8899 focuscreativegames/luban-server:latest")])]),e._v(" "),t("li",[t("p",[e._v("Based on .net 6 runtime (cross-platform, no need to recompile)")]),e._v(" "),t("ul",[t("li",[e._v("Install .net 6 runtime by yourself.")]),e._v(" "),t("li",[e._v("Copy the entire Luban.ClientServer directory from "),t("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Tools/Luban.ClientServer",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project"),t("OutboundLink")],1),e._v(" ("),t("strong",[e._v("cross-platform, even in linux, The mac platform does not need to be recompiled")]),e._v(")")]),e._v(" "),t("li",[e._v("Run dotnet Luban.Server.dll in the Luban.ClientServer directory (reminder: Win platform can run Luban.Server.exe directly)")])])])]),e._v(" "),t("h4",{attrs:{id:"install-luban-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-luban-client"}},[e._v("#")]),e._v(" Install luban-client")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Based on docker (only recommended for use with devops tools such as jenkins, because docker container startup will add a certain delay)")]),e._v(" "),t("p",[e._v("docker run --rm -v $PWD/.cache.meta:/bin/.cache.meta focuscreativegames/luban-client <parameters> .")]),e._v(" "),t("p",[e._v("Remind! The .cache.meta file is used to save the md5 cache of files generated locally or submitted to the remote, "),t("strong",[e._v("strongly recommended")]),e._v(" Add -v $PWD/.cache.meta:/bin/.cache.meta mapping, otherwise reload every time computes the md5 of all files involved, which can cause delays of up to a few seconds later in the project.")])]),e._v(" "),t("li",[t("p",[e._v("Based on .net 6 runtime (recommended for win platform, cross-platform, no need to recompile)")]),e._v(" "),t("ul",[t("li",[e._v("Install .net 6 runtime by yourself.")]),e._v(" "),t("li",[e._v("Copy Luban.Client from "),t("a",{attrs:{href:"https://github.com/focus-creative-games/luban_examples/tree/main/Tools/Luban.Client",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project"),t("OutboundLink")],1),e._v(" ("),t("strong",[e._v("cross-platform, even on linux and mac platforms No need to recompile")]),e._v(")")])])])]),e._v(" "),t("h3",{attrs:{id:"method-2-client-and-server-integrated-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#method-2-client-and-server-integrated-mode"}},[e._v("#")]),e._v(" Method 2: Client and Server integrated mode")]),e._v(" "),t("p",[e._v("Client and Server run in the same process, and there is no need to deploy Luban.Server separately.")]),e._v(" "),t("p",[e._v("Change the %LUBAN_CLIENT% variable in the running script from Luban.Client/Luban.Client to Luban.ClientServer/Luban.ClientServer, and "),t("strong",[e._v("delete the -h (--host ) option and its parameters")]),e._v(".")]),e._v(" "),t("p",[e._v("Luban.ClientServer is a functional superset of Luban.Client and can completely replace Luban.Client.")]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"use"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use"}},[e._v("#")]),e._v(" Use")]),e._v(" "),t("h3",{attrs:{id:"luban-server-introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#luban-server-introduction"}},[e._v("#")]),e._v(" Luban-server Introduction")]),e._v(" "),t("p",[e._v("Command line use")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('dotnet Luban.Server.dll [-p <port>] [-l <log level>]\n\nParameter introduction:\n-p, --port <port>                   Optional parameter. Listen on port <port>, default is 8899.\n-l, --loglevel <log level>          Optional parameter. log level. The default is INFO. Valid values are: TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF  \n-t, --template_search_path          Optional parameter. Additional search paths for templates. Prioritize this path, and then search for template files from the Templates directory.  \n--disable_cache                     Optional parameter. Disables caching of intermediate builds, but preserves source file caching. Useful for template debugging.\n--i10n:default_timezone  <timezone> Optional parameter. The time zone in which the datetime time is located. If not set it will try to use "Asia/Shanghai"和"China Standard Time"。\n')])])]),t("p",[e._v('Regarding the time zone, you can use the command "tzutil /l" under win to view the local time zone list. See also MS documentation'),t("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",target:"_blank",rel:"noopener noreferrer"}},[e._v("default-time-zones line"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"luban-client-introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#luban-client-introduction"}},[e._v("#")]),e._v(" luban-client introduction")]),e._v(" "),t("p",[e._v("Command line use")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("dotnet Luban.Client.dll [-h <host>] [-p <port>] [-l <log level>] [-c <cache meta file>] [-w <watch dirs>] [-h ] -j cfg -- <job options>\n\nParameter introduction:\n-h,--host <host>                Optional parameter. The address of luban-server. Default is 127.0.0.1\n-p,--port <port>                Optional parameter. The port of luban-server. Default is 8899\n-j,--job <job>                  Required parameter. build type. Currently supported generation types are: cfg, proto, db. Please take cfg to generate configuration.\n-l,--loglevel <log level>       Optional parameter. log level. The default is INFO. Valid values are: TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF\n-c,--cachemetafile <meta file>  Optional parameter. The meta cache file name. The default is .cache.meta\n-w,--watch <dir1;dir2...>       Optional parameter. Monitor directories or directory lists, separated by commas ';'. When this option is turned on, the program will not exit after the generation is completed, but will enter the automatic generation mode.\n                                          Automatically re-run the build after listening to changes in the target directory. Save yourself the hassle of manually running build scripts after making changes.\n--generateonly                  Optional parameter. Build only. Build results are not downloaded from the server. Can be used to check if the server can be generated successfully.\n-h,--help                       Optional parameter. show help information\n--  <job options>               Required parameter. Starting from this parameter, it is a unique option for different jobs\n")])])]),t("hr"),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("cfg's <job options> introduction:\n\n-d,--define_file <root file>            Required parameter. Root definition filename.\n--input_data_dir  <input data dir>      Required parameter. Configuration data file root directory.\n--input:convert:dir <dir>               Optional parameter. When performing data format conversions such as json, lua, and xlsx, the provided data source overrides the default input parameters in the table.\n-c,--output_code_dir <output code dir>  Optional parameter. The directory where the code files are generated.\n-s,--service                            Required parameter. Generate grouping targets. Generally speaking, several targets such as client, server, and editor are defined, and the generated content of different targets is different.\n\n--gen_types <type1,type2,,,>  Required parameter. Build task type. It can be either to generate code or to generate data or others.\n                              Currently supported are code_cs_bin,code_cs_unity_bin,code_cs_dotnet_json,code_cs_unity_json,\n                                  code_cs_unity_editor_json,code_lua_bin,code_java_bin,code_go_bin,\n                                  code_go_json,code_cpp_bin,code_cpp_ue_editor_json,code_python27_json,\n                                  code_python3_json, code_gdscript_json, code_typescript_bin,code_typescript_json,code_rust_json,\n                                  code_protobuf2,code_protobuf3,code_template,code_flatbuffers,\n                                  data_bin,data_bidx,data_lua,data_json,data_json_monolithic,data_bson,data_yaml,\n                                  data_template,data_protobuf_bin,data_protobuf_json,data_flatbuffers_json,\n                                  convert_json,convert_lua,convert_xlsx,convert_template\n\n--validate_root_dir <path validate root dir>. Optional parameter. Configure the root directory for path checking.\n\n--output_data_dir <output data dir>     Optional parameter. Directory for exported data files. Can not be specified when only generating code.\n\n--output:data:compact_json                   Optional parameter. The default exported json format is an aligned elegant format, and this parameter is used to export a compact format without spaces and newlines.\n--output:data:file_extension  <output data file extension>     Optional parameter. The suffix of the exported data file. By default, it is automatically selected according to the generation type.\n--output:exclude_tags <tag1,tag2>           Optional parameter. Exclude data containing these tags when exporting\n--output:tables <table1,table2...>          Optional parameter. Manually specify which tables to export. Override the settings in the group\n--output:include_tables <table1,table2...>  Optional parameter. In addition to the settings in the group, additional tables are added\n--output:exclude_tables <table1,table2...>  Optional parameter. Exclude the tables specified in group.\n\n--output:convert:file_extension <extension> Optional parameter. The suffix of the convert data file. The default is to guess from the template name.\n\n--template:code:dir <dir name>              Optional parameter. Directory name for custom extra code templates\n--template:data:file  <template name>       Optional parameter. The name of the data template (without suffix), must be specified when gen_types contains data_template.\n--template:convert:file <template name>     Optional parameter. The name of the convert template (without the suffix), which must be specified when gen_types contains convert_template.\n\n\n--naming_convention:module <convention>     Optional parameter. Naming convention for template names in generated code, available values are language_recommend, none, camelCase, PascalCase, under_scores. The default is language_recommend, that is, select the naming convention style recommended by the corresponding language. This option is currently inactive.\n--naming_convention:bean_member <convention> Optional parameter. Naming convention for bean type field names in generated code, available values are language_recommend, none, camelCase, PascalCase, under_scores. Defaults to language_recommend.\n--naming_convention:enum_member <convention> Optional parameter. Naming convention for enum type names in generated code, available values are language_recommend, none, camelCase, PascalCase, under_scores. Defaults to language_recommend. This option is currently inactive.\n--access_bean_member <access mode>  Optional parameter. The access mode of the bean property. Available values are language_recommend, variable, getter_setter, property. Defaults to language_recommend. This field is currently inactive.\n\n--l10n:timezone <timezone>           Optional parameter. Specify your time zone. Affect datetime type conversion to utc time. The default is Beijing time, China.\n--l10n:input_text_files <file1,file2..> Optional parameter. Localized text maps. There can be more than one.\n--l10n:text_field_name <field name>     Optional parameter. In the text mapping table, the column name of the target mapping column, the default is text\n--l10n:output_not_translated_text_file <file> Optional parameter. Output file for text key and value not mapped by localization. If this parameter is not provided, it will not be generated\n--l10n:patch <patch name>                  Optional parameter. The name of the branch that needs to be generated currently.\n--l10n:patch_input_data_dir <patch data root dir> Optional parameter. Root directory for branch data.\n\n--typescript:bright_require_path <path>    Optional parameter. The path to the bright module referenced by the generated typescript code\n--typescript:bright_package_name <packet>  Optional parameter. Generate typescript code to reference the path of the bright library in the form of a package\n--typescript:use_puerts_bytebuf            Optional parameter. The c# Bytebuf class imported in puerts is used in the generated typescript code.\n--cs:use_unity_vector                      Optional parameter. In generating c# code, use UnityEngine.Vector{2,3,4} as the Vector data type.\n--go:bright_module_name <module path>      Optional parameter. When generating go code, the import directory of the bright module.\n\n--external:selectors  <selector1,selector2 ...>       Optional parameter. External class selector, can be multiple. selector must be in root.xml\nOne of the selectors defined in externalselector.\n")])])]),t("h4",{attrs:{id:"gen-types-parameter-introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gen-types-parameter-introduction"}},[e._v("#")]),e._v(" gen_types parameter introduction")]),e._v(" "),t("p",[e._v("Currently supported gen_types are")]),e._v(" "),t("ul",[t("li",[e._v("Code generation related\n"),t("ul",[t("li",[e._v("code_cs_bin               Generate the code for reading bin format data on the dotnet platform. The difference from code_cs_unity_bin is that the vector{2,3,4} type it generates isSystem.Numerics.Vector{2,3,4}")]),e._v(" "),t("li",[e._v("code_cs_unity_bin         Generate code suitable for reading bin format data for unity. The difference from code_cs_bin is that the vector{2,3,4} type it generates isUnityEngine.Vector{2,3,4}")]),e._v(" "),t("li",[e._v("code_cs_dotnet_json       Generate code for reading data in json format on the dotnet platform. The difference from code_cs_unity_json is that the vector{2,3,4} type it generates isSystem.Numerics.Vector{2,3,4}")]),e._v(" "),t("li",[e._v("code_cs_unity_json        Generate code suitable for reading json format data for unity. The difference from code_cs_dotnet_json is that the vector{2,3,4} type it generates isUnityEngine.Vector{2,3,4}")]),e._v(" "),t("li",[e._v("code_cs_unity_editor_json Generate code suitable for unity editor development. A record can be loaded or saved to a json file individually.")]),e._v(" "),t("li",[e._v("code_lua_bin              Generate lua language to read bin format code")]),e._v(" "),t("li",[e._v("code_java_bin             Generate java code to read bin format")]),e._v(" "),t("li",[e._v("code_java_json            Generate java code to read json format")]),e._v(" "),t("li",[e._v("code_go_bin               Generate code for go to read bin format")]),e._v(" "),t("li",[e._v("code_go_json              Generate code for go to read json format")]),e._v(" "),t("li",[e._v("code_cpp_bin              Generate cpp to read bin format code")]),e._v(" "),t("li",[e._v("code_cpp_ue_editor_json   Generate code suitable for UE4 editor development. A record can be loaded or saved to a json file individually")]),e._v(" "),t("li",[e._v("code_python27_json        Generate python2 series of codes to read json format")]),e._v(" "),t("li",[e._v("code_python3_json         Generate python3 series of codes to read json format")]),e._v(" "),t("li",[e._v("code_gdscript_json        Generate gdscript series to read the code in json format")]),e._v(" "),t("li",[e._v("code_typescript_bin       Generate ts code to read bin format")]),e._v(" "),t("li",[e._v("code_typescript_json      Generate ts code to read json format")]),e._v(" "),t("li",[e._v("code_rust_json            Generate code for rust to read json format")]),e._v(" "),t("li",[e._v("code_protobuf2            Generate protobuf2 schema file")]),e._v(" "),t("li",[e._v("code_protobuf3            Generate protobuf3 schema file")]),e._v(" "),t("li",[e._v("code_template             Indicates the use of custom code templates")]),e._v(" "),t("li",[e._v("code_flatbuffers          Generate flatbuffers schema file")])])]),e._v(" "),t("li",[e._v("Data generation related\n"),t("ul",[t("li",[e._v("data_bin Export bin format data")]),e._v(" "),t("li",[e._v("data_bidx Index data in bin format. Facilitates lazy loading at the record level")]),e._v(" "),t("li",[e._v("data_lua  Export lua format data")]),e._v(" "),t("li",[e._v("data_json Export data in json format")]),e._v(" "),t("li",[e._v("data_json_monolithic。 The difference with data_json is that it generates the json data files of all tables into a json file")]),e._v(" "),t("li",[e._v("data_bson Export bson format data")]),e._v(" "),t("li",[e._v("data_yaml Export data in yaml format")]),e._v(" "),t("li",[e._v("data_xml Export data in xml format")]),e._v(" "),t("li",[e._v("data_template custom data template")]),e._v(" "),t("li",[e._v("data_protobuf_bin Export binary format data of protobuf")]),e._v(" "),t("li",[e._v("data_protobuf_json Export the json data format of protobuf3")]),e._v(" "),t("li",[e._v("data_flatbuffers_json Export the json data format of flatbuffers")]),e._v(" "),t("li",[e._v("data_resources Export all data with res tag")])])]),e._v(" "),t("li",[e._v("Source data conversion related\n"),t("ul",[t("li",[e._v("convert_json Convert all source data to json source data format. Note that it is different from the export format. Each record occupies a file")]),e._v(" "),t("li",[e._v("convert_lua Convert all source data to lua source data format. Each record occupies a file")]),e._v(" "),t("li",[e._v("convert_xlsx Convert all source data to xlsx format. Each table occupies one file")]),e._v(" "),t("li",[e._v("convert_template Custom conversion templates. But each record occupies a file")])])])]),e._v(" "),t("h4",{attrs:{id:"cache-meta-purpose-of-the-document"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-meta-purpose-of-the-document"}},[e._v("#")]),e._v(" .cache.meta purpose of the document")]),e._v(" "),t("p",[e._v("The first time a build is done, the local directory will have a .cache.meta.")]),e._v(" "),t("p",[e._v(".cache.meta contains information (path, md5 code, length, modification timestamp) of all files involved in the interaction with Luban.Server. Used to optimize build performance.")]),e._v(" "),t("p",[e._v("Since the working model of Luban.Client and Luban.Server is a cloud generation model, after Luban.Client initiates a generation request to the server, the server does not directly read the configuration file required for generation, but first obtains\nThe meta information (path, md5) of these files, if there is a file with the same md5 in the memory cache, it will be read directly, and the file data will not be read from the client, which greatly improves the performance of incremental generation.")]),e._v(" "),t("p",[e._v("After the server is generated, it will also send the generated file metadata list to the client, including (path, md5) these metadata information. If these files do not exist locally, download the download, if they already exist, check\nWhether there is any change, at this time Luban.Client will not directly read the local file and calculate md5, but first check whether there is corresponding file md5 information in .cache.meta, if the length of the local file and the modification timestamp\nIf it is the same as that in .cache.meta, it is considered that .cache.meta contains the correct md5 value, and then compare this value with the md5 of the result generated by the server. Only if it is different, will it be re-downloaded.")]),e._v(" "),t("h2",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),t("p",[e._v("Suppose:")]),e._v(" "),t("p",[e._v("luban.server runs on this machine, the port is 8899\nThe location of luban.client is d:\\tools\\Luban.Client\nConfiguration definitions are in d:\\raw_config\\defines\nThe root definition file for configuration definitions is d:\\raw_config\\defines_"),t("em",[e._v("root")]),e._v("_.xml\nConfiguration data is in d:\\raw_configs\\datas")]),e._v(" "),t("p",[e._v("The client project is a unity project, the location is d:\\client\nYou expect the code generated by the client to be in the d:\\client\\Assets\\Gen directory\nYou expect the data generated by the client to be in the d:\\client\\Assets\\StreamingAssets\\GameData directory")]),e._v(" "),t("p",[e._v("Your server project is a dotnet c# project, located in d:\\server\nYou expect the code generated by the server to be in d:\\server\\src\\Gen\nYou expect the data generated by the server to be in d:\\server\\GameData")]),e._v(" "),t("h3",{attrs:{id:"case-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-1"}},[e._v("#")]),e._v(" Case 1")]),e._v(" "),t("p",[e._v("You generate code and data for the client.\nYou expect the exported data type in bin format\nThe service you choose for the client is grouped as client\nCurrently in development, you expect test data to be included in the exported data")]),e._v(" "),t("p",[e._v("Then the command under win is:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dotnet d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.dll ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-h")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8899")]),e._v(" ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-j")]),e._v(" cfg ^\n    -- ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--define_file")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("__root__.xml ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--input_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_code_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Assets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Gen ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Assets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("StreamingAssets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("GameData ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gen_types")]),e._v(" code_cs_unity_bin,data_bin ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--service")]),e._v(" client\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("The same is true for linux bash commands.")]),e._v(" "),t("h3",{attrs:{id:"case-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-2"}},[e._v("#")]),e._v(" Case 2")]),e._v(" "),t("p",[e._v("You generate code and data for the client.\nYou expect to export datatypes using json format.\nYou don't expect the dev and test tags to be included in the exported data")]),e._v(" "),t("p",[e._v("Then the command under win is:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dotnet d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.dll ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-h")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8899")]),e._v(" ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-j")]),e._v(" cfg ^\n    -- ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--define_file")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("__root__.xml ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--input_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_code_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Assets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Gen ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Assets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("StreamingAssets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("GameData ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gen_types")]),e._v(" code_cs_unity_json,data_json ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--service")]),e._v(" client ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--export_exclude_tags")]),e._v(" dev,test\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("h3",{attrs:{id:"case-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-3"}},[e._v("#")]),e._v(" Case 3")]),e._v(" "),t("p",[e._v("You generate code and data for the server.")]),e._v(" "),t("p",[e._v("You expect to use json export data format.\nYou expect to include test data.\nThe service you choose for the server is server")]),e._v(" "),t("p",[e._v("Then the command under win is:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dotnet d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.dll ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-h")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8899")]),e._v(" ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-j")]),e._v(" cfg ^\n    -- ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--define_file")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("__root__.xml ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--input_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_code_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Gen ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("GameData ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gen_types")]),e._v(" code_cs_json,data_json ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--service")]),e._v(" server\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h3",{attrs:{id:"case-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-4"}},[e._v("#")]),e._v(" Case 4")]),e._v(" "),t("p",[e._v("luban-server is deployed by you on the machine 192.168.1.10, and the port is 1111. Others are as case 3.")]),e._v(" "),t("p",[e._v("Then the generation command under win is:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dotnet d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.dll ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-h")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.10 ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1111")]),e._v(" ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-j")]),e._v(" cfg ^\n    -- ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--define_file")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("__root__.xml ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--input_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_code_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Gen ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("GameData ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gen_types")]),e._v(" code_cs_dotnet_json,data_json ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--service")]),e._v(" server\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h3",{attrs:{id:"case-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-5"}},[e._v("#")]),e._v(" Case 5")]),e._v(" "),t("p",[e._v("You generate code and data for the server. At the same time, let luban.client not exit after execution and enter the monitoring state. As long as the configuration definition or data changes, the code and data will be automatically generated.")]),e._v(" "),t("p",[e._v("You expect to use json export data format.\nYou expect to include test data.\nThe service you choose for the server is server")]),e._v(" "),t("p",[e._v("Then the command under win is:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dotnet d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("tools"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Luban.Client.dll ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-h")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8899")]),e._v(" ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-j")]),e._v(" cfg ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-w")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas\n    -- ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--define_file")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("defines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("__root__.xml ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--input_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("raw_configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("datas ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_code_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Gen ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output_data_dir")]),e._v(" d:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("GameData ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gen_types")]),e._v(" code_cs_dotnet_json,data_json ^\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--service")]),e._v(" server   \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);