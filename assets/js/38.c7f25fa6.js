(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{359:function(i,t,l){"use strict";l.r(t);var e=l(7),_=Object(e.a)({},(function(){var i=this,t=i._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("p",[i._v("此文档默认您已经了解了在Windows或mac下的打包构建流程，并了解了相关注意事项。")]),i._v(" "),t("h1",{attrs:{id:"ios打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ios打包"}},[i._v("#")]),i._v(" iOS打包")]),i._v(" "),t("p",[i._v("Unity打包iOS目标时生成的xcode工程中并没有像其他平台那样包含libil2cpp源码，而是使用了提前编译好的libil2cpp.a。编译支持HybridCLR热更新的app需要将它替换成扩充了HybridCLR代码libil2cpp.a。"),t("strong",[i._v("替换xcode工程中的libil2cpp.a文件请自行完成")]),i._v("，下面只介绍如何编译libil2cpp.a。")]),i._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[i._v("com.focus-creative-games.hybridclr_unity"),t("OutboundLink")],1),i._v("/Data~/iOSBuild 目录包含了编译 "),t("code",[i._v("libil2cpp.a")]),i._v(" 所需的脚本。在安装package并且使用"),t("code",[i._v("HybridCLR/Installer...")]),i._v("命令成功初始化HybridCLR插件后，iOSBuild目录会被复制到"),t("code",[i._v("{project}/HybridCLRData/iOSBuild")]),i._v(" 目录。下面提到的编译操作都在 "),t("code",[i._v("{project}/HybridCLRData/iOSBuild")]),i._v(" 目录下完成。")]),i._v(" "),t("h2",{attrs:{id:"libil2cpp-a-编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#libil2cpp-a-编译"}},[i._v("#")]),i._v(" libil2cpp.a 编译")]),i._v(" "),t("ul",[t("li",[i._v("确保你的macOS版本>=12以及xcode版本>=13。最小支持版本是哪个我们未仔细验证过。")]),i._v(" "),t("li",[i._v("确保已经安装HybridCLR并且使用菜单"),t("code",[i._v("HybridCLR/Installer...")]),i._v("成功初始化插件")]),i._v(" "),t("li",[i._v("检查你项目的 HybriCLRSettings 配置(菜单"),t("code",[i._v("HybridCLR/Settings")]),i._v(")，确保正确设置了各项参数。")]),i._v(" "),t("li",[i._v("点击菜单 "),t("code",[i._v("HybridCLRData/Generate/All")]),i._v(" 生成所有必要的文件")]),i._v(" "),t("li",[t("strong",[i._v("可选")]),i._v("设置 "),t("code",[i._v("IPHONESIMULATOR_VERSION")]),i._v("变量。该变量指示了iPhoneSimulator版本，未设置时使用系统默认iPhoneSimulator版本。命令类似这样 "),t("code",[i._v("export IPHONESIMULATOR_VERSION=15.5")])]),i._v(" "),t("li",[i._v("打开命令控制台，切换到 "),t("code",[i._v("{project}/HybridCLRData/iOSBuild")]),i._v(" 目录。请确保这个路径的绝对路径不包含空格！否则出错")]),i._v(" "),t("li",[i._v("bash ./build_libil2cpp.sh 编译libil2cpp.a 。运行结束后，如果在"),t("code",[i._v("iOSBuild/build")]),i._v("目录下能找到libil2cpp.a文件并且size大于60M，表示编译成功")])]),i._v(" "),t("h2",{attrs:{id:"常见错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见错误"}},[i._v("#")]),i._v(" 常见错误")]),i._v(" "),t("ul",[t("li",[i._v("未正确安装HybridCLR就尝试build")]),i._v(" "),t("li",[i._v("未安装使用较新的macOS(12以上)及最新xcode")]),i._v(" "),t("li",[i._v("由于git设置的原因，拉下来的build_libil2cpp.sh及build_lump.sh包含不正确的文件结束符，导致脚本运行前几行代码就出错。 错误信息也很明显，如 "),t("code",[i._v("/bin/bash^M 文件不存在")]),i._v("。运行命令 "),t("code",[i._v("cat -v build_libil2cpp.sh")]),i._v(" 检查确认换行符的正确性。 运行 "),t("code",[i._v("git config --global core.autocrlf input")]),i._v("，然后再重新拉取这这两个脚本文件即可。详情可 "),t("a",{attrs:{href:"https://docs.github.com/cn/get-started/getting-started-with-git/configuring-git-to-handle-line-endings",target:"_blank",rel:"noopener noreferrer"}},[i._v("参见git换行符设置"),t("OutboundLink")],1),i._v("。")]),i._v(" "),t("li",[t("code",[i._v("{project}/HybridCLRData/iOSBuild")]),i._v("的绝对路径包含空格，导致gen_lump.sh脚本生成错误的结果")])])])}),[],!1,null,null,null);t.default=_.exports}}]);