(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{432:function(e,t,a){"use strict";a.r(t);var s=a(7),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"hybridclr-unity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr-unity"}},[e._v("#")]),e._v(" hybridclr_unity")]),e._v(" "),t("p",[e._v("hybridclr_unity is a Unity package that provides Editor workflow tool scripts and Runtime scripts required by HybridCLR. with the help of\nThe workflow tool provided by hybridclr_unity makes it very easy to package an App that supports HybridCLR hot update function.")]),e._v(" "),t("p",[e._v("The hybridclr_unity tool mainly includes:")]),e._v(" "),t("ul",[t("li",[e._v("Editor related scripts\n-iOSBuild script")]),e._v(" "),t("li",[e._v("Runtime related scripts")])]),e._v(" "),t("h2",{attrs:{id:"install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("p",[e._v("Install "),t("code",[e._v("com.focus-creative-games.hybridclr_unity")]),e._v(" from git url "),t("a",{attrs:{href:"https://gitee.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitee (recommended)"),t("OutboundLink")],1),e._v(" or "),t("a",{attrs:{href:"https://github.com/focus-creative-games/hybridclr_unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),t("OutboundLink")],1),e._v(" package.")]),e._v(" "),t("p",[e._v("If you are not familiar with installing packages from url, please see "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/upm-ui-giturl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("install from giturl"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Due to domestic network reasons, you may encounter network exceptions in Unity and fail to install. You can clone or download "),t("code",[e._v("com.focus-creative-games.hybridclr_unity")]),e._v(" to local, and then "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/upm-ui-local.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("install from disk"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Or a simpler way, after downloading to the local, rename the warehouse folder directory to "),t("code",[e._v("com.focus-creative-games.hybridclr_unity")]),e._v(", and copy it directly to the "),t("code",[e._v("Packages")]),e._v(" directory of your project.")]),e._v(" "),t("h2",{attrs:{id:"hybridclr-menu-introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr-menu-introduction"}},[e._v("#")]),e._v(" HybridCLR menu introduction")]),e._v(" "),t("h3",{attrs:{id:"installer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installer"}},[e._v("#")]),e._v(" Installer...")]),e._v(" "),t("p",[e._v("A handy installer is provided to help correctly set up the local il2cpp directory, which contains a modified version replacing the "),t("code",[e._v("HybridCLRData/LocalIl2CppData-{platform}/il2cpp/libil2cpp")]),e._v(" directory with HybridCLR.")]),e._v(" "),t("p",[e._v("The installer needs to copy il2cpp (similar to "),t("code",[e._v("C:\\Program Files\\Unity\\Hub\\Editor\\2020.3.33f1\\Editor\\Data\\il2cpp")]),e._v(") related files from the Unity installation directory of the matching version.")]),e._v(" "),t("ul",[t("li",[e._v("For 2019.4.40+, 2021.3.25+, 2021.3.0+ versions, copy the il2cpp file directly from the installation directory of that version.")]),e._v(" "),t("li",[e._v("For 2020.3.16-2020.3.20 versions, 2020.3.26+ versions need to be installed additionally, because the il2cpp files of these versions are not compatible with HybridCLR, but il2cpp of compatible versions (ie 2020.3.26+) can be used.  "),t("strong",[e._v("Notice! From version 1.1.7, the installer no longer supports installing il2cpp related files from other versions, you can only install them manually according to the principle.")])])]),e._v(" "),t("p",[t("code",[e._v("Installation Status: Installed | Not Installed")]),e._v(" in the installation interface indicates whether HybridCLR initialization is complete.")]),e._v(" "),t("p",[e._v("In the installation interface, the "),t("code",[e._v("il2cpp_plus branch corresponds to the il2cpp path of the compatible version of Unity")]),e._v(" ("),t("strong",[e._v("Note! Version 1.1.7 removed this setting.")]),e._v(") Several conditions must be met:")]),e._v(" "),t("ul",[t("li",[e._v("Must be the il2cpp directory of a compatible unity version")]),e._v(" "),t("li",[e._v("The path must contain the unity version number (the Installer is used to identify the Unity version, and to prevent novices from choosing the wrong directory)")])]),e._v(" "),t("p",[e._v("If the path is legal, the interface will display normally, otherwise a red warning will appear.")]),e._v(" "),t("p",[e._v("Fill in the commit id or branch or tag of the hybridclr and il2cpp_plus warehouses you want to install. If the version number of hybridclr is left blank, install the latest version from the main branch of the hybridclr repository.\nIf the version number of il2cpp_plus is left blank, install the latest version of the branch of the corresponding annual version (such as 2020.3.33).")]),e._v(" "),t("p",[e._v("Click Install, if successful, the "),t("code",[e._v("Installation Successful")]),e._v(" log will be displayed at the end, and the installation status will switch to "),t("code",[e._v("Installed")]),e._v(", otherwise please check the error log.")]),e._v(" "),t("p",[e._v("If HybridCLR is already installed, clicking the Install button will install the latest HybridCLR version of libil2cpp.")]),e._v(" "),t("h3",{attrs:{id:"compile-dll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compile-dll"}},[e._v("#")]),e._v(" Compile Dll")]),e._v(" "),t("p",[e._v("For each target, you must use the hot update dll compiled under the compile switch of the target platform, otherwise the hot update code will not match the code information of the AOT main package or hot update resources.")]),e._v(" "),t("p",[e._v("Unity will print this kind of log when there is no match: "),t("code",[e._v("A scripted object (probably XXX?) has a different serialization layout when loading. Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?")]),e._v(".")]),e._v(" "),t("p",[e._v("With the help of Unity's "),t("code",[e._v("PlayerBuildInterface.CompilePlayerScripts")]),e._v(" Api, hybridclr_unity provides a compilation script for compiling the hot update dll corresponding to each target. After the compilation is completed, the hot update dll is placed in the "),t("code",[e._v("{project}/HybridCLRData/HotUpdateDlls/{platform}")]),e._v(" directory.")]),e._v(" "),t("p",[e._v("Developers can flexibly choose the appropriate way to use these hot update dlls.")]),e._v(" "),t("h3",{attrs:{id:"generate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generate"}},[e._v("#")]),e._v(" Generate")]),e._v(" "),t("p",[e._v("Generate contains a variety of generation tools.")]),e._v(" "),t("p",[e._v("####LinkXml")]),e._v(" "),t("p",[e._v("Scan the AOT type referenced by the hot update dll, generate link.xml, and prevent the AOT type or function used by the hot update script from being clipped. The output file path is specified in the "),t("code",[e._v("OuputLinkXml")]),e._v(" field in HybridCLRSettings.asset, and the default is "),t("code",[e._v("LinkGenerator/link.xml")]),e._v(".")]),e._v(" "),t("p",[e._v("For a more specific introduction to clipping, please see "),t("RouterLink",{attrs:{to:"/hybridclr/code_striping/"}},[e._v("Code Clipping Principles and Solutions")]),e._v(".")],1),e._v(" "),t("p",[e._v("####MethodBridge")]),e._v(" "),t("p",[e._v("Scan and generate bridge function files according to the current AOT dll set. The "),t("code",[e._v("maxGenericReferenceIteration")]),e._v(" field in HybridCLRSettings.asset specifies the maximum number of iterations for generic recursive scanning. Most items take\nWithin 10 is enough.")]),e._v(" "),t("p",[e._v("For more specific documents related to bridge functions, please see the "),t("RouterLink",{attrs:{to:"/hybridclr/method_bridge/"}},[e._v("bridge function")]),e._v(" document.")],1),e._v(" "),t("h4",{attrs:{id:"aotgenericreference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aotgenericreference"}},[e._v("#")]),e._v(" AOTGenericReference")]),e._v(" "),t("p",[e._v("Scan all generated AOT generic types and function instantiations according to the current hot update dll, and generate a "),t("strong",[e._v("inspired")]),e._v(" generic instantiation file.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("outputAOTGenericReferenceFile")]),e._v(" field in HybridCLRSettings.asset specifies the output file path, and the "),t("code",[e._v("maxGenericReferenceIteration")]),e._v(" field specifies the maximum number of iterations for the generic recursive scan.")]),e._v(" "),t("p",[e._v("Since it is troublesome to convert the scanned generic types and functions into corresponding code references, all generated generic instantiation codes are "),t("strong",[e._v("comment codes")]),e._v(", which are converted into correct instantiation references by developers themselves ("),t("strong",[e._v("This operation is optional, it can not be processed at all or only part of it")]),e._v("), that is, instantiate the generic class or generic function in this comment in the AOT code. The method is roughly as follows:")]),e._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// System.Collections.Generics.List`1<System.Object>.ctor")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[e._v("List"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// System.Byte[] Array.Empty`1<System.Byte>()")]),e._v("\n    Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token generic-method"}},[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Empty")]),t("span",{pre:!0,attrs:{class:"token generic class-name"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Please add instantiation references to generic types and functions in other files, as this output file will be overwritten every time it is regenerated.")]),e._v(" "),t("p",[e._v("This generic instantiation documentation is only for inspiration, telling you which classes and functions can be instantiated with aot generics. After using the supplementary metadata mechanism,\n"),t("strong",[e._v("Do nothing")]),e._v(" and do not affect normal operation. But if you manually instantiate aot generics, you can improve performance. The suggestion is to manually instantiate a small number of performance-sensitive classes or functions, such as "),t("code",[e._v("Dictionary<int,int>")]),e._v(".")]),e._v(" "),t("p",[e._v("For more specific AOT generic related documents, please see "),t("RouterLink",{attrs:{to:"/hybridclr/aot_generic/"}},[e._v("AOT Generic Introduction")]),e._v(".")],1),e._v(" "),t("h4",{attrs:{id:"reversepinvokewrapper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reversepinvokewrapper"}},[e._v("#")]),e._v(" ReversePInvokeWrapper")]),e._v(" "),t("p",[e._v("Generate a ReversePInvokeWrapper function for hot-updated C# static functions marked with "),t("code",[e._v("[MonoPInvokeCallback]")]),e._v(" annotation. In this way, each hot update C# static function will have a unique corresponding C++ function,\nIt can be used to register in scripting languages such as lua and be called by scripting languages.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("reversePInvokeWrapperCount")]),e._v(" field in HybridCLRSettings.asset indicates the number of generated wrapper c++ functions. Please reserve enough to ensure that it exceeds the number of C# functions marked with "),t("code",[e._v("[MonoPInvokeCallback]")]),e._v(" annotations in the hot update C# code. Otherwise an exception may be thrown.")]),e._v(" "),t("p",[e._v("For a more specific introduction to MonoPInvokeCallback, please see the document [MonoPInvokeCallback support] (/hybridclr/monopinvokecallback/)")]),e._v(" "),t("h4",{attrs:{id:"il2cppdef"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#il2cppdef"}},[e._v("#")]),e._v(" Il2CppDef")]),e._v(" "),t("p",[e._v("Generate macro definitions related to the current Unity version. Similar to the following:")]),e._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Il2CppCompatibleDefs.h")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("HYBRIDCLR_UNITY_VERSION")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020333")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("HYBRIDCLR_UNITY_2020")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("HYBRIDCLR_UNITY_2019_OR_NEW")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("HYBRIDCLR_UNITY_2020_OR_NEW")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")])])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"dheassemblylist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dheassemblylist"}},[e._v("#")]),e._v(" DHEAssemblyList")]),e._v(" "),t("p",[t("strong",[e._v("Notice! Version 1.1.7 removed this field.")])]),e._v(" "),t("p",[e._v("Generate differential hybrid assembly list code.")]),e._v(" "),t("p",[e._v("Because HybridCLR needs to preprocess the differential mixed execution assembly at the stage of il2cpp initialization, it is currently provided to HybridCLR in the form of the generated assembly list code.")]),e._v(" "),t("p",[e._v("Examples are as follows:")]),e._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Il2CppCompatibleDefs.cpp file")]),e._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" g_differentialHybridAssemblies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//!!!{{DHE")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Assembly-CSharp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//!!!}}DHE")]),e._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("nullptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"dheassemblyoptiondatas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dheassemblyoptiondatas"}},[e._v("#")]),e._v(" DHEAssemblyOptionDatas")]),e._v(" "),t("p",[t("strong",[e._v("Notice! Version 1.1.7 removed this field.")])]),e._v(" "),t("p",[e._v("Generate configuration data for differential hybrid assembly.")]),e._v(" "),t("p",[e._v("Loading a differential hybrid execution assembly requires some configuration data. For example, which functions are changed are calculated offline, so that there is no need to determine whether the function has changed at runtime. The configuration data is passed in as a parameter when calling "),t("code",[e._v("RuntimeApi::LoadDifferentialHybridAssembly")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"all"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[e._v("#")]),e._v(" All")]),e._v(" "),t("p",[e._v("Execute the above four generation operations with one click.")]),e._v(" "),t("h2",{attrs:{id:"hybridclr-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybridclr-configuration"}},[e._v("#")]),e._v(" HybridCLR configuration")]),e._v(" "),t("p",[e._v("Click the menu "),t("code",[e._v("HybridCLR/Settings")]),e._v(" to open the configuration interface. The fields are detailed below.")]),e._v(" "),t("h3",{attrs:{id:"enable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enable"}},[e._v("#")]),e._v(" enable")]),e._v(" "),t("p",[e._v("Whether to enable HyridCLR hot update. The default is true. If false, the package no longer includes HybridCLR functionality.")]),e._v(" "),t("h3",{attrs:{id:"useglobalil2cpp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useglobalil2cpp"}},[e._v("#")]),e._v(" useGlobalIl2cpp")]),e._v(" "),t("p",[e._v("Whether to use the global installation location, that is, the il2cpp directory under the editor installation location. The default is false. Generally, "),t("code",[e._v("useGlobalIl2cpp=true")]),e._v(" is only required when packaging WebGL.")]),e._v(" "),t("p",[e._v("Note that even if "),t("code",[e._v("useGlobalIl2Cpp=true")]),e._v(", il2cpp will still be copied to the HybridCLRData directory during installation.\nYou need to manually replace the "),t("code",[e._v("{project}/HyridCLRData/LocalIl2CppData-{platform}/il2cpp/libil2cpp")]),e._v(" directory with the corresponding directory under the editor installation directory. In addition, run "),t("code",[e._v("HybridCLR/Generate/*")]),e._v(" to execute the generation operation. The output directory is still a local directory. You need to manually copy and replace the libil2cpp directory in the global installation location.")]),e._v(" "),t("h3",{attrs:{id:"hybridclrrepourl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybridclrrepourl"}},[e._v("#")]),e._v(" hybridclrRepoURL")]),e._v(" "),t("p",[e._v("The address of the hybridclr warehouse, the default value is "),t("code",[e._v("https://gitee.com/focus-creative-games/hybridclr")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"il2cppplusrepourl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#il2cppplusrepourl"}},[e._v("#")]),e._v(" il2cppPlusRepoURL")]),e._v(" "),t("p",[e._v("The address of the il2cpp_plus warehouse, the default value is "),t("code",[e._v("https://gitee.com/focus-creative-games/il2cpp_plus")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"hotupdateassemblydefinitions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hotupdateassemblydefinitions"}},[e._v("#")]),e._v(" hotUpdateAssemblyDefinitions")]),e._v(" "),t("p",[e._v("The list of hot update modules defined in the form of assembly definition (asmdef) is equivalent to "),t("code",[e._v("hotUpdateAssemblies")]),e._v(" below, but it is more convenient to drag and drop asmdef modules in the editor, and it is not easy to make mistakes and write wrong names.")]),e._v(" "),t("p",[t("code",[e._v("hotUpdateAssemblyDefinitions")]),e._v(" and "),t("code",[e._v("hotUpdateAssemblies")]),e._v(" are combined to form the final hot update dll list. The same assembly should not appear in two lists at the same time, an error will be reported!")]),e._v(" "),t("h3",{attrs:{id:"hotupdateassemblies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hotupdateassemblies"}},[e._v("#")]),e._v(" hotUpdateAssemblies")]),e._v(" "),t("p",[e._v("Some assemblies exist in the form of dll, such as the hot update dll you created in an external project, or you directly use Assembly-CSharp as your hot update dll. Since there is no corresponding asmdef file, it can only be manually configured in the form of dll name.")]),e._v(" "),t("p",[e._v("Do not include the '.dll' suffix when filling in the assembly name, just like "),t("code",[e._v("Main")]),e._v(", "),t("code",[e._v("Assembly-CSharp")]),e._v(".")]),e._v(" "),t("p",[e._v("Assembly in asmdef form, you can also choose not to add it to "),t("code",[e._v("hotUpdateAssemblyDefinitions")]),e._v(", but add it to "),t("code",[e._v("hotUpdateAssemblies")]),e._v(". But this is not as convenient as directly dragging into the list, you can choose at your own discretion.")]),e._v(" "),t("p",[t("code",[e._v("hotUpdateAssemblyDefinitions")]),e._v(" and "),t("code",[e._v("hotUpdateAssemblies")]),e._v(" are combined to form the final hot update dll list. The same assembly should not appear in two lists at the same time, an error will be reported!")]),e._v(" "),t("h3",{attrs:{id:"preservehotupdateassemblies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preservehotupdateassemblies"}},[e._v("#")]),e._v(" preserveHotUpdateAssemblies")]),e._v(" "),t("p",[e._v("A list of reserved hot update dll names. Sometimes I want to add some hot update dlls in the future, and expect the scripts of these new hot update dlls to be mounted on resources. If you directly add the hot update dll name to hotUpdateAssemblies, an error that the assembly does not exist will be reported. The preserveHotUpdateAssemblies field is used to meet this requirement. These dlls are not checked for validity when packaging and will be added to an assembly list file like scriptingassemblies.json.")]),e._v(" "),t("p",[e._v("Do not include the '.dll' suffix when filling in the assembly name, just like "),t("code",[e._v("Abc")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"hotupdatedllcompileoutputrootdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hotupdatedllcompileoutputrootdir"}},[e._v("#")]),e._v(" hotUpdateDllCompileOutputRootDir")]),e._v(" "),t("p",[e._v("The output root directory of the compiled hot update dll. The final output directory is under the platform subdirectory of this directory, namely "),t("code",[e._v("${hotUpdateDllCompileOutputRootDir}/{platform}")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"externalhotupdateassemblydirs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#externalhotupdateassemblydirs"}},[e._v("#")]),e._v(" externalHotUpdateAssemblyDirs")]),e._v(" "),t("p",[e._v("Customize the search path for external hot update dlls. Some hot update projects of frameworks or projects are placed outside Unity, and the compiled dll is also outside. This parameter provides a hot update dll\nThe search path, so that there is no need to copy the external dll to the project or to the hotUpdateAssemblies directory every time.")]),e._v(" "),t("ul",[t("li",[e._v("Search in the order of the search path, the higher the priority, the higher the priority.")]),e._v(" "),t("li",[e._v("Search paths must be relative locations, relative to the project root. That is, fill in "),t("code",[e._v("mydir")]),e._v(" and search for "),t("code",[e._v("{proj}/mydir")]),e._v(".")]),e._v(" "),t("li",[e._v("For each path "),t("code",[e._v("dir")]),e._v(", it will first try to search "),t("code",[e._v("{dir}/{platform}")]),e._v(", and then try to search "),t("code",[e._v("{dir}")]),e._v(". This is done in order to take into account the specificity and versatility of the platform.")])]),e._v(" "),t("h3",{attrs:{id:"strippedaotdlloutputrootdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strippedaotdlloutputrootdir"}},[e._v("#")]),e._v(" strippedAOTDllOutputRootDir")]),e._v(" "),t("p",[e._v("Staging directory for trimmed AOT dlls. The final directory is under the platform subdirectory of this directory, namely "),t("code",[e._v("${strippedAOTDllOutputRootDir}/{platform}")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"patchaota-assemblies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#patchaota-assemblies"}},[e._v("#")]),e._v(" patchAOTA Assemblies")]),e._v(" "),t("p",[e._v("Supplementary metadata AOT dll list. The package itself does not use this configuration item. But it provides a place to configure the AOT dll list, which is convenient for developers to use in their own packaging process, so that developers do not need to define a separate AOT dll configuration script.")]),e._v(" "),t("p",[e._v("Do not include the '.dll' suffix when filling in the assembly name, just like "),t("code",[e._v("Main")]),e._v(", "),t("code",[e._v("Assembly-CSharp")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"differentialhybridassemblies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#differentialhybridassemblies"}},[e._v("#")]),e._v(" differentialHybridAssemblies")]),e._v(" "),t("p",[t("strong",[e._v("Notice! Version 1.1.7 removed this field.")])]),e._v(" "),t("p",[e._v("A list of assemblies for differential mix execution. The assembly executed by differential hybrid and the assembly of pure hot update are not the same type of assembly, and cannot appear in the list of hotUpdateAssemblies at the same time.")]),e._v(" "),t("h3",{attrs:{id:"differentialhybridoptionoutputdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#differentialhybridoptionoutputdir"}},[e._v("#")]),e._v(" differentialHybridOptionOutputDir")]),e._v(" "),t("p",[t("strong",[e._v("Notice! Version 1.1.7 removed this field.")])]),e._v(" "),t("p",[e._v("Runtime configuration parameters for assemblies executed by differential hybrids.")]),e._v(" "),t("p",[e._v("Some configuration parameters need to be passed to the assembly of differential mixed execution, such as which functions have changed. These configuration data are the optionBytes parameter of "),t("code",[e._v("LoadImageErrorCode RuntimeApi::LoadDifferentialHybridAssembly(byte[] dllBytes, byte[] optionBytes)")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"outputlinkfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outputlinkfile"}},[e._v("#")]),e._v(" outputLinkFile")]),e._v(" "),t("p",[e._v("When running the menu "),t("code",[e._v("HybridCLR/Generate/LinkXml")]),e._v(" command, the output link.xml file path.")]),e._v(" "),t("p",[e._v("Do not point to "),t("code",[e._v("Assets/link.xml")]),e._v(", that link.xml is generally used to manually reserve the AOT type, and this automatically output link.xml will be overwritten every time.")]),e._v(" "),t("h3",{attrs:{id:"outputaotgenericreferencefile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outputaotgenericreferencefile"}},[e._v("#")]),e._v(" outputAOTGenericReferenceFile")]),e._v(" "),t("p",[e._v("The path of the AOT generic instantiation assembly file output when running the menu "),t("code",[e._v("HybridCLR/Generate/AOTGenericReference")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"maxgenericreferenceiteration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maxgenericreferenceiteration"}},[e._v("#")]),e._v(" maxGenericReferenceIteration")]),e._v(" "),t("p",[e._v("When running the menu "),t("code",[e._v("HybridCLR/Generate/AOTGenericReference")]),e._v(", the generation tool recursively analyzes the number of iterations of AOT generic instantiation.")]),e._v(" "),t("p",[e._v("Because new generic classes and generic functions may be used indirectly in generic functions, multiple rounds of iterations are required to analyze all generic instantiations. The "),t("code",[e._v("maxGenericReferenceIteration")]),e._v(" parameter is used to control the number of iterations. This parameter is generally within 10 enough, you can observe the log\nIt can be seen that the calculation terminates after several rounds of iterations. If there are still a large number of uncalculated iterations of generic types when the iteration terminates, this value can be increased appropriately.")]),e._v(" "),t("p",[e._v("Why not iterate until all generic instantiations are computed? Because there may be situations that can never be calculated. The following code, AOT.Show()\nDue to recursive generic instantiation, it can never be calculated.")]),e._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("struct")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("AOT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Show")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")])]),e._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[e._v("AOT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("AOT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n            a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Show")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h3",{attrs:{id:"maxmethodbridgegenericiteration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maxmethodbridgegenericiteration"}},[e._v("#")]),e._v(" maxMethodBridgeGenericIteration")]),e._v(" "),t("p",[e._v("When running the menu "),t("code",[e._v("HybridCLR/Generate/MethodBridge")]),e._v(", the generation tool recursively analyzes the number of iterations of AOT generic instantiation. The meaning is similar to "),t("code",[e._v("maxGenericReferenceIteration")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"editor-related-tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#editor-related-tools"}},[e._v("#")]),e._v(" Editor related tools")]),e._v(" "),t("p",[e._v("It mainly includes the following functions:")]),e._v(" "),t("ul",[t("li",[e._v("Initialize HybridCLR")]),e._v(" "),t("li",[e._v("Check and fix settings")]),e._v(" "),t("li",[e._v("Automatically exclude hot update assembly when packaging")]),e._v(" "),t("li",[e._v("Add the hot update dll name to the assembly list when packaging")]),e._v(" "),t("li",[e._v("backup trimmed AOT dll")]),e._v(" "),t("li",[e._v("Generate some files and codes needed for packaging")]),e._v(" "),t("li",[e._v("Compile the hot update dll for the target platform")])]),e._v(" "),t("h3",{attrs:{id:"initialize-hybridclr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-hybridclr"}},[e._v("#")]),e._v(" Initialize HybridCLR")]),e._v(" "),t("p",[e._v("Run the "),t("code",[e._v("HybridCLR/Installer...")]),e._v(" menu command to complete the initialization. See the menu command introduction above for details.")]),e._v(" "),t("h3",{attrs:{id:"check-and-fix-settings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#check-and-fix-settings"}},[e._v("#")]),e._v(" Check and fix settings")]),e._v(" "),t("p",[e._v("It is part of the packaging workflow, and the relevant code is in "),t("code",[e._v("Editor/BuildProcessors/CheckSettings.cs")]),e._v(".")]),e._v(" "),t("p",[e._v("Contains the following actions:")]),e._v(" "),t("ul",[t("li",[e._v("Set or clear the UNITY_IL2CPP_PATH environment variable according to whether HybridCLR is enabled. The UNITY_IL2CPP_PATH environment variable modified in the script is the environment variable of this process, so don't worry about interfering with other projects.")]),e._v(" "),t("li",[e._v("Automatically turn off this option if it detects that incremental GC has been accidentally turned on.")]),e._v(" "),t("li",[e._v("If no hot update assembly is set in HybridCLRSettings, an error will be displayed.")])]),e._v(" "),t("h3",{attrs:{id:"automatically-exclude-hot-update-assembly-when-packaging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#automatically-exclude-hot-update-assembly-when-packaging"}},[e._v("#")]),e._v(" Automatically exclude hot update assembly when packaging")]),e._v(" "),t("p",[e._v("It is part of the packaging workflow, and the relevant code is in "),t("code",[e._v("Editor/BuildProcessors/FilterHotFixAssemblies.cs")]),e._v(".")]),e._v(" "),t("p",[e._v("Obviously, the hot update assembly should not be processed by il2cpp and compiled into the final package body. We handle the "),t("code",[e._v("IFilterBuildAssemblies")]),e._v(" callback,\nRemove the hot update dll from the list of build assemblies.")]),e._v(" "),t("p",[e._v("The script will additionally check whether the name of the assembly is wrongly written, and whether there is a duplicate assembly configured by mistake.")]),e._v(" "),t("h3",{attrs:{id:"maxmethodbridgegenericiteration-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maxmethodbridgegenericiteration-2"}},[e._v("#")]),e._v(" maxMethodBridgeGenericIteration")]),e._v(" "),t("p",[e._v("When running the menu "),t("code",[e._v("HybridCLR/Generate/MethodBridge")]),e._v(", the generation tool recursively analyzes the number of iterations of AOT generic instantiation. The meaning is similar to "),t("code",[e._v("maxGenericReferenceIteration")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"editor-related-tools-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#editor-related-tools-2"}},[e._v("#")]),e._v(" Editor related tools")]),e._v(" "),t("p",[e._v("It mainly includes the following functions:")]),e._v(" "),t("ul",[t("li",[e._v("Initialize HybridCLR")]),e._v(" "),t("li",[e._v("Check and fix settings")]),e._v(" "),t("li",[e._v("Automatically exclude hot update assembly when packaging")]),e._v(" "),t("li",[e._v("Add the hot update dll name to the assembly list when packaging")]),e._v(" "),t("li",[e._v("backup trimmed AOT dll")]),e._v(" "),t("li",[e._v("Generate some files and codes needed for packaging")]),e._v(" "),t("li",[e._v("Compile the hot update dll for the target platform")])]),e._v(" "),t("h3",{attrs:{id:"initialize-hybridclr-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-hybridclr-2"}},[e._v("#")]),e._v(" Initialize HybridCLR")]),e._v(" "),t("p",[e._v("Run the "),t("code",[e._v("HybridCLR/Installer...")]),e._v(" menu command to complete the initialization. See the menu command introduction above for details.")]),e._v(" "),t("h3",{attrs:{id:"check-and-fix-settings-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#check-and-fix-settings-2"}},[e._v("#")]),e._v(" Check and fix settings")]),e._v(" "),t("p",[e._v("It is part of the packaging workflow, and the relevant code is in "),t("code",[e._v("Editor/BuildProcessors/CheckSettings.cs")]),e._v(".")]),e._v(" "),t("p",[e._v("Contains the following actions:")]),e._v(" "),t("ul",[t("li",[e._v("Set or clear the UNITY_IL2CPP_PATH environment variable according to whether HybridCLR is enabled. The UNITY_IL2CPP_PATH environment variable modified in the script is the environment variable of this process, so don't worry about interfering with other projects.")]),e._v(" "),t("li",[e._v("Automatically turn off this option if it detects that incremental GC has been accidentally turned on.")]),e._v(" "),t("li",[e._v("If no hot update assembly is set in HybridCLRSettings, an error will be displayed.")])]),e._v(" "),t("h3",{attrs:{id:"automatically-exclude-hot-update-assembly-when-packaging-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#automatically-exclude-hot-update-assembly-when-packaging-2"}},[e._v("#")]),e._v(" Automatically exclude hot update assembly when packaging")]),e._v(" "),t("p",[e._v("It is part of the packaging workflow, and the relevant code is in "),t("code",[e._v("Editor/BuildProcessors/FilterHotFixAssemblies.cs")]),e._v(".")]),e._v(" "),t("p",[e._v("Obviously, the hot update assembly should not be processed by il2cpp and compiled into the final package body. We handle the "),t("code",[e._v("IFilterBuildAssemblies")]),e._v(" callback,\nRemove the hot update dll from the list of build assemblies.")]),e._v(" "),t("p",[e._v("The script will additionally check whether the name of the assembly is wrongly written, and whether there is a duplicate assembly configured by mistake.")]),e._v(" "),t("h3",{attrs:{id:"generate-some-files-and-codes-needed-for-packaging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generate-some-files-and-codes-needed-for-packaging"}},[e._v("#")]),e._v(" Generate some files and codes needed for packaging")]),e._v(" "),t("p",[e._v("Contains the following generation functions:")]),e._v(" "),t("ul",[t("li",[e._v("Scan to generate link.xml")]),e._v(" "),t("li",[e._v("generate bridge function")]),e._v(" "),t("li",[e._v("Generate AOT generic instantiation code")]),e._v(" "),t("li",[e._v("Generate ReversePInvokeCallback related wrapper files")])]),e._v(" "),t("p",[e._v("These generation commands are included in the menu "),t("code",[e._v("HybridCLR/Generate/*")]),e._v(", please see the introduction document above.")]),e._v(" "),t("h2",{attrs:{id:"iosbuild-script"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iosbuild-script"}},[e._v("#")]),e._v(" iOSBuild script")]),e._v(" "),t("p",[t("code",[e._v("Editor/Data~/iOSBuild")]),e._v(" in the package contains the scripts needed to compile the iOS version libil2cpp.a. After running the "),t("code",[e._v("HybridCLR/Installer...")]),e._v(" menu command to successfully initialize HybridCLR, it will be automatically copied to the "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" directory. "),t("strong",[e._v("Subsequent operations must be performed in the "),t("code",[e._v("{project}/HybridCLRData/iOSBuild")]),e._v(" directory.")])]),e._v(" "),t("p",[e._v("For the specific operation of build libil2cpp.a, please refer to the document "),t("RouterLink",{attrs:{to:"/hybridclr/build_ios_libil2cpp/"}},[e._v("iOS Platform Packaging")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"runtime-related-scripts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#runtime-related-scripts"}},[e._v("#")]),e._v(" Runtime related scripts")]),e._v(" "),t("p",[e._v("Contains classes used at runtime. Currently relatively simple.")]),e._v(" "),t("h3",{attrs:{id:"loadimageerrorcode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loadimageerrorcode"}},[e._v("#")]),e._v(" LoadImageErrorCode")]),e._v(" "),t("p",[e._v("Error code of loading hot update dll.")]),e._v(" "),t("h3",{attrs:{id:"metadata-mode-homologousimagemode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#metadata-mode-homologousimagemode"}},[e._v("#")]),e._v(" Metadata Mode HomologousImageMode")]),e._v(" "),t("p",[e._v("Two metadata schemas are currently supported:")]),e._v(" "),t("h4",{attrs:{id:"homologousimagemode-consistent-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homologousimagemode-consistent-mode"}},[e._v("#")]),e._v(" "),t("code",[e._v("HomologousImageMode::Consistent")]),e._v(" mode")]),e._v(" "),t("p",[e._v("That is, the supplementary dll is exactly the same as the trimmed dll when packaging. Therefore, the clipped dll generated during the build process must be used, and the original dll cannot be copied directly. We added processing code in "),t("code",[e._v("HybridCLR.BuildProcessors.CopyStrippedAOTAssemblies")]),e._v(" to automatically copy these clipped dlls to the "),t("code",[e._v("{project}/HybridCLRData/AssembliesPostIl2CppStrip/{target}")]),e._v(" directory when packaging.")]),e._v(" "),t("h4",{attrs:{id:"homologousimagemode-superset-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homologousimagemode-superset-mode"}},[e._v("#")]),e._v(" "),t("code",[e._v("HomologousImageMode::SuperSet")]),e._v(" mode")]),e._v(" "),t("p",[e._v("That is, the supplementary dll is a superset of the trimmed dll when packaging, and contains all the metadata of the trimmed dll. One of the easiest superset dlls to get is the original aot dll, which is also the recommended superset dll.")]),e._v(" "),t("ul",[t("li",[e._v("The original UnityEngine-related AOT dll is in the PlayBackEngines subdirectory of the Unity installation directory")]),e._v(" "),t("li",[e._v("The original .net core AOT dll such as mscorlib.dll is in the "),t("code",[e._v("unityaot{xxx}")]),e._v(" directory of the Unity installation directory. 2019-2020 will be unified into the unityaot directory, and will be split into multiple directories starting from 2021. If you package android, take unityaot-linux, and if you package iOS, take unityaot-macos.")]),e._v(" "),t("li",[e._v("The AOT dll of the plug-in is the original dll of the corresponding platform in the project directory. If it is in the form of source code, it is a compiled dll, just take the corresponding dll in the "),t("code",[e._v("HybridCLR/HotUpdateDlls/{platform}")]),e._v(" directory")])]),e._v(" "),t("p",[e._v("Take the Win64 target under Win of Unity 2020.3.33 version as an example:")]),e._v(" "),t("ul",[t("li",[e._v("mscorlib.dll in "),t("code",[e._v("{editor}/Editor/Data/MonoBleedingEdge/lib/mono/unityaot")])]),e._v(" "),t("li",[e._v("UnityEngine.CoreModule.dll in "),t("code",[e._v("{editor}/Editor/Data/Playbackengines/windowsstandalonesupport/Variations/il2cpp/Managed")])]),e._v(" "),t("li",[e._v("protobuf-net.dll is the original "),t("code",[e._v("protobuf-net.dll")]),e._v(" in your project")]),e._v(" "),t("li",[e._v("The AOT dll corresponding to your AOT module Main is "),t("code",[e._v("HybridCLR/HotUpdateDlls/{platform}/Main.dll")])])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("SuerSet")]),e._v(" mode can also use the trimmed dll of the "),t("code",[e._v("Consistent")]),e._v(" mode, since it obviously contains all the metadata for itself. However, the "),t("code",[e._v("SuperSet")]),e._v(" mode is mainly to simplify the workflow and avoid the "),t("code",[e._v("metadata not match")]),e._v(" problem that often occurs in the "),t("code",[e._v("Consistent")]),e._v(" mode, so unless you want to optimize the memory, it is strongly recommended to use the original AOT dll.")]),e._v(" "),t("h3",{attrs:{id:"runtimeapi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#runtimeapi"}},[e._v("#")]),e._v(" RuntimeApi")]),e._v(" "),t("p",[e._v("The underlying tool class for operating HybridCLR. There are a few more commonly used")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("LoadImageErrorCode LoadMetadataForAOTAssembly(byte[] dllBytes, HomologousImageMode mode)")]),e._v(" is used to load supplementary metadata assembly.")]),e._v(" "),t("li",[t("code",[e._v("LoadImageErrorCode UseDifferentialHybridAOTAssembly(string assemblyName)")]),e._v(" When the differential hybrid execution assembly has not changed, you can choose to use the original AOT assembly completely. "),t("strong",[e._v("Notice! Version 1.1.7 removed this function.")])]),e._v(" "),t("li",[t("code",[e._v("LoadImageErrorCode LoadDifferentialHybridAssembly(byte[] dllBytes, byte[] optionBytes)")]),e._v(" Load differential hybrid execution assembly. "),t("strong",[e._v("Notice! Version 1.1.7 removed this function.")])])]),e._v(" "),t("h3",{attrs:{id:"unchangedattribute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unchangedattribute"}},[e._v("#")]),e._v(" UnchangedAttribute")]),e._v(" "),t("p",[e._v("For differential mixed execution assembly, it is used to manually specify which functions are changed or not. The changed function is executed in interpreter mode, and the unchanged function is executed in native AOT mode.")]),e._v(" "),t("p",[e._v("Currently, for demonstration purposes, unchanged functions need to be manually marked, and later official versions will be automatically calculated, and this feature is basically not used.")]),e._v(" "),t("h3",{attrs:{id:"reversepinvokewrappergenerationattribute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reversepinvokewrappergenerationattribute"}},[e._v("#")]),e._v(" ReversePInvokeWrapperGenerationAttribute")]),e._v(" "),t("p",[e._v("Each function with the "),t("code",[e._v("[MonoPInvokeCallback]")]),e._v(" attribute requires a unique corresponding wrapper function. These wrapper functions must be pre-generated during packaging and cannot be changed.\nTherefore, if a function with the "),t("code",[e._v("[MonoPInvokeCallback]")]),e._v(" feature is added in subsequent hot updates, there will be insufficient wrapper functions.")]),e._v(" "),t("p",[e._v("ReversePInvokeWrapperGenerationAttribute is used to reserve a specified number of wrapper functions for the current function added with the "),t("code",[e._v("[MonoPInvokeCallback]")]),e._v(" attribute.")]),e._v(" "),t("p",[e._v("In the following example, 10 wrapper functions are reserved for functions signed by LuaFunction.")]),e._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("delegate")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("LuaFunction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("IntPtr")]),e._v(" luaState"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MonoPInvokeWrapperPreserves")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token attribute"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ReversePInvokeWrapperGeneration")]),t("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token attribute"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MonoPInvokeCallback")]),t("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[e._v("LuaFunction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("LuaCallback")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("IntPtr")]),e._v(" luaState"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token attribute"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MonoPInvokeCallback")]),t("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[e._v("Func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token attribute"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MonoPInvokeCallback")]),t("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[e._v("Func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Sum2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token attribute"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MonoPInvokeCallback")]),t("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[e._v("Func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Sum3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);